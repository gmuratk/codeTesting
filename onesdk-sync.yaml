openapi: 3.0.3
info:
  title: Unified CAMARA Service Capability SDK Demo
  version: 1.0.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: '{apiRoot}'
    variables:
      apiRoot:
        default: http://localhost:9091
        description: API root, defined by the service provider, e.g. api.example.com or api.example.com/somepath
paths:
  /subscriptions:
    post:
      tags:
        - CAMARA Extended CloudEvents Common Subscription
      summary: Create a subscription for receiving notifications on the common CAMARA CloudEvents.
      description: Create a subscription for receiving notifications on the common CAMARA CloudEvents.
      operationId: createCamaraCloudEventsSubscription
      parameters:
        - $ref: '#/components/parameters/x-correlator'
      security:
        - openId:
            - camara-cloudevents-subscriptions:org.camaraproject.camara-cloudevents-subscriptions.v0.common:create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CamaraExtendedSubscriptionRequest'
      callbacks:
        notifications:
          '{$request.body#/sink}':
            post:
              summary: notifications callback
              description: |
                Important: this endpoint is to be implemented by the API consumer.
                The CAMARA Cloud Events server will call this endpoint whenever the common CAMARA CloudEvents.
              operationId: postCamaraCloudEventsNotification
              parameters:
                - $ref: '#/components/parameters/x-correlator'
              requestBody:
                required: true
                content:
                  application/cloudevents-batch+json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/schemas/CamaraExtendedCloudEventsAttribute'
              responses:
                '204':
                  description: Successful notification
                  headers:
                    x-correlator:
                      $ref: '#/components/headers/x-correlator'
                '400':
                  $ref: '#/components/responses/Generic400'
                '401':
                  $ref: '#/components/responses/Generic401'
                '403':
                  $ref: '#/components/responses/Generic403'
                '410':
                  $ref: '#/components/responses/Generic410'
                '429':
                  $ref: '#/components/responses/Generic429'
              security:
                - notificationsBearerAuth: []
      responses:
        '201':
          description: Created (Successful creation of subscription)
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CamaraExtendedSubscription'
        '202':
          description: Request accepted to be processed. It applies for async creation process.
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionAsync'
        '400':
          $ref: '#/components/responses/CreateSubscriptionBadRequest400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/SubscriptionPermissionDenied403'
        '409':
          $ref: '#/components/responses/Generic409'
        '422':
          $ref: '#/components/responses/CreateSubscriptionUnprocessableEntity422'
        '429':
          $ref: '#/components/responses/Generic429'
    get:
      tags:
        - CAMARA Extended CloudEvents Common Subscription
      summary: Retrieve a list of CAMARA CloudEvents subscription
      description: Retrieve a list of CAMARA CloudEvents subscription(s)
      operationId: retrieveCamaraCloudEventsSubscriptionList
      parameters:
        - $ref: '#/components/parameters/x-correlator'
      security:
        - openId:
            - camara-cloudevents-subscriptions:read
      responses:
        '200':
          description: List of event subscription details
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                items:
                  $ref: '#/components/schemas/CamaraExtendedSubscription'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
    options:
      tags:
        - CAMARA Extended CloudEvents Common Subscription
      operationId: getCamaraCloudEventsFeatures
      summary: getFeatures
      description: Discover supported features and methods for this endpoint
      parameters:
        - $ref: '#/components/parameters/x-correlator'
      security:
        - openId:
            - camara-cloudevents-subscriptions:read
      responses:
        '200':
          description: OK
          headers:
            Allow:
              schema:
                type: string
                default: GET,POST,OPTIONS
            x-correlator:
              $ref: '#/components/headers/x-correlator'
        '400':
          $ref: '#/components/responses/Generic400'
  /subscriptions/{id}:
    get:
      tags:
        - CAMARA Extended CloudEvents Common Subscription
      summary: Retrieve a CAMARA CloudEvents subscription metadata
      description: retrieve CAMARA CloudEvents subscription metadata.
      operationId: retrieveCamaraCloudEventsSubscription
      security:
        - openId:
            - camara-cloudevents-subscriptions:read
      parameters:
        - $ref: '#/components/parameters/x-correlator'
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/If-None-Match'
        - $ref: '#/components/parameters/If-Modified-Since'
      responses:
        '200':
          description: |
            Subscription metadata. 
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
            ETag:
              $ref: '#/components/headers/ETag'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Last-Modified:
              $ref: '#/components/headers/Last-Modified'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CamaraExtendedSubscription'
        '400':
          $ref: '#/components/responses/SubscriptionIdRequired400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
        '409':
          $ref: '#/components/responses/Generic409'
    put:
      tags:
        - CAMARA Extended CloudEvents Common Subscription
      operationId: updateCamaraCloudEventsSubscription
      summary: updateCamaraCloudEventsSubscription
      description: Update a CAMARA CloudEvents subscription
      security:
        - openId:
            - camara-cloudevents-subscriptions:update
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/x-correlator'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CamaraExtendedSubscription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CamaraExtendedSubscription'
        '400':
          $ref: '#/components/responses/CreateSubscriptionBadRequest400'
        '404':
          $ref: '#/components/responses/Generic404'
    delete:
      tags:
        - CAMARA Extended CloudEvents Common Subscription
      summary: Delete CamaraCloudEvents subscription
      operationId: deleteCamaraCloudEventsSubscription
      description: delete a given CAMARA CloudEvents subscription.
      security:
        - openId:
            - camara-cloudevents-subscriptions:delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/x-correlator'
      responses:
        '202':
          description: Request accepted to be processed. It applies for async deletion process.
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionAsync'
        '204':
          description: CAMARA CloudEvents subscription deleted
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
        '400':
          $ref: '#/components/responses/SubscriptionIdRequired400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
    options:
      tags:
        - CAMARA Extended CloudEvents Common Subscription
      operationId: getCamaraCloudEventsSubscriptionFeatures
      summary: getSubscriptionFeatures
      description: Discover supported features and methods for this endpoint
      security:
        - openId:
            - camara-cloudevents-subscriptions:read
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/x-correlator'
      responses:
        '200':
          description: OK
          headers:
            Allow:
              schema:
                type: string
                default: GET,PUT,DELETE,OPTIONS
            x-correlator:
              $ref: '#/components/headers/x-correlator'
        '400':
          $ref: '#/components/responses/Generic400'
  /camara/cloudevents/webhook/v0:
    post:
      tags:
        - CAMARA Cloud Events
      summary: Cloud Event notification endpoint to notify consumer that statement of fact had occurred
      description: |
        INFORMATIVE ENDPOINT: The value of this endpoint is freely declared by each client app by means of resource-based
        subscription or instance-based subscription. /camara/cloudevents/webhook/v0 is 
        just a convention naming referring to an absolute URL, indeed the one indicated by API client
        in the triggering of the procedure (resource-based or instance-based).  In this way, it represents an absolute
        URL, i.e.: notifications won't be sent to /event-notification/vX/your_webhook_notification_url.
      operationId: sendCamaraCloudEvents
      parameters:
        - $ref: '#/components/parameters/x-correlator'
      requestBody:
        required: true
        content:
          application/cloudevents-batch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CamaraExtendedCloudEventsAttribute'
      responses:
        '204':
          description: No Content
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '410':
          $ref: '#/components/responses/Generic410'
        '429':
          $ref: '#/components/responses/Generic429'
  /camara/service/capability/v0:
    post:
      tags:
        - CAMARA Service Capability Query
      summary: Retrieve tailored service capabilities based on consumer context
      description: |
        Returns service capability information tailored to the consumer's context, including active/inactive restrictions and mapping metadata.
        Successful response is with sets of restrictions based on consumer context, along with a restriction mapping assigning bit positions, 
        capability identifiers, and a mapping version. It includes response with initial bitmaps which should be enforced on the API consumer side.
      operationId: postServiceCapability
      parameters:
        - $ref: '#/components/parameters/x-correlator'
        - $ref: '#/components/parameters/If-None-Match'
        - $ref: '#/components/parameters/If-Modified-Since'
      security:
        - openId:
            - camara-capability:read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CamaraCapabilityQueryRequest'
            examples:
              CAMARA_CAPABILITY_QUERY_REQUEST_EXAMPLE:
                $ref: '#/components/examples/CAMARA_CAPABILITY_QUERY_REQUEST_EXAMPLE'
      callbacks:
        notifications:
          '{$request.body#/subscriptionRequest/sink}':
            post:
              tags:
                - CAMARA Service Capability notifications callback
              summary: CAMARA Service Capability notifications callback
              description: |
                Important: this endpoint is to be implemented by the API consumer.
                The API provider will call this endpoint whenever any CAMARA Service Capability change related event occurs.
                Currently only EVENT_CAPABILITY_CHANGED and EVENT_CAPABILITY_REMOVED events are defined.
              operationId: postCapabilityNotification
              parameters:
                - $ref: '#/components/parameters/x-correlator'
              requestBody:
                required: true
                content:
                  application/cloudevents-batch+json:
                    schema:
                      type: array
                      items:
                        $ref: '#/components/schemas/CamaraExtendedCloudEventsAttribute'
                    examples:
                      EVENT_CAPABILITY_BITMAP_CHANGED_EXAMPLE:
                        $ref: '#/components/examples/EVENT_CAPABILITY_BITMAP_CHANGED_EXAMPLE'
                      EVENT_CAPABILITY_INFO_CHANGED_EXAMPLE:
                        $ref: '#/components/examples/EVENT_CAPABILITY_INFO_CHANGED_EXAMPLE'
              responses:
                '204':
                  description: Successful notification
                  headers:
                    x-correlator:
                      $ref: '#/components/headers/x-correlator'
                '400':
                  $ref: '#/components/responses/Generic400'
                '401':
                  $ref: '#/components/responses/Generic401'
                '403':
                  $ref: '#/components/responses/Generic403'
                '410':
                  $ref: '#/components/responses/Generic410'
              security:
                - notificationsBearerAuth: []
      responses:
        '201':
          description: Tailored Capability info with current restriction mapping
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
            ETag:
              $ref: '#/components/headers/ETag'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Last-Modified:
              $ref: '#/components/headers/Last-Modified'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityInfo'
              examples:
                CAMARA_CAPABILITY_QUERY_REQUEST_RESPONSE_EXAMPLE:
                  $ref: '#/components/examples/CAMARA_CAPABILITY_QUERY_REQUEST_RESPONSE_EXAMPLE'
        '304':
          $ref: '#/components/responses/CapabilityNotModified304'
        '400':
          $ref: '#/components/responses/CapabilityApiBadRequest400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/CapabilityApiNotFound404'
        '500':
          $ref: '#/components/responses/Generic500'
        '503':
          $ref: '#/components/responses/Generic503'
  /sessions:
    post:
      tags:
        - QoS Sessions
      summary: Creates a new session
      description: |
        Create QoS Session to manage latency/throughput priorities

        If the qosStatus in the API response is "AVAILABLE" and a notification callback is provided the API consumer will receive in addition to the response a
        `QOS_STATUS_CHANGED` event notification with `qosStatus` as `AVAILABLE`.

        If the `qosStatus` in the API response is `REQUESTED`, the client will receive either
        - a `QOS_STATUS_CHANGED` event notification with `qosStatus` as `AVAILABLE` after the network notifies that it has created the requested session, or
        - a `QOS_STATUS_CHANGED` event notification with `qosStatus` as `UNAVAILABLE` and `statusInfo` as `NETWORK_TERMINATED` after the network notifies that it has failed to provide the requested session.

        A `QOS_STATUS_CHANGED` event notification with `qosStatus` as `UNAVAILABLE` will also be send if the network terminates the session before the requested duration expired

        **NOTES:**
        - In case of a `QOS_STATUS_CHANGED` event with `qosStatus` as `UNAVAILABLE` and `statusInfo` as `NETWORK_TERMINATED` the resources of the QoS session are not directly released, but will get deleted automatically at earliest 360 seconds after the event.

          This behavior allows API consumers which are not receiving notification events but are polling to get the session information with the `qosStatus` `UNAVAILABLE` and `statusInfo` `NETWORK_TERMINATED`. Before a API consumer can attempt to create a new QoD session for the same device and flow period they must release the session resources with an explicit `delete` operation if not yet automatically deleted.
        - The access token may be either 2-legged or 3-legged. See "Identifying the device from the access token" for further information
          - When the API is invoked using a two-legged access token, the subject will be identified from the optional `device` object, which therefore MUST be provided.
          - When a three-legged access token is used however, this optional identifier MUST NOT be provided, as the subject will be uniquely identified from the access token.
      operationId: createSession
      security:
        - openId:
            - quality-on-demand:sessions:create
      parameters:
        - $ref: '#/components/parameters/x-correlator'
      requestBody:
        description: Parameters to create a new session
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSession'
        required: true
      callbacks:
        notifications:
          '{$request.body#/subscriptionRequest/sink}':
            post:
              tags:
                - Session notifications callback
              summary: Session notifications callback
              description: |
                Important: this endpoint is to be implemented by the API consumer.
                The API provider will call this endpoint whenever any QoS session change (e.g. network termination) related event occurs.
                Currently only QOS_STATUS_CHANGED event is defined.
              operationId: postNotification
              parameters:
                - $ref: '#/components/parameters/x-correlator'
              requestBody:
                required: true
                content:
                  application/cloudevents+json:
                    schema:
                      $ref: '#/components/schemas/CamaraExtendedCloudEventsAttribute'
                    examples:
                      EVENT_QOS_STATUS_CHANGED_EXAMPLE:
                        $ref: '#/components/examples/EVENT_QOS_STATUS_CHANGED_EXAMPLE'
              responses:
                '204':
                  description: Successful notification
                  headers:
                    x-correlator:
                      $ref: '#/components/headers/x-correlator'
                '400':
                  $ref: '#/components/responses/Generic400'
                '401':
                  $ref: '#/components/responses/Generic401'
                '403':
                  $ref: '#/components/responses/Generic403'
                '410':
                  $ref: '#/components/responses/Generic410'
              security:
                - {}
                - notificationsBearerAuth: []
      responses:
        '201':
          description: Session created
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInfo'
        '400':
          $ref: '#/components/responses/CreateSessionBadRequest400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/GenericDevice404'
        '409':
          $ref: '#/components/responses/SessionInConflict409'
        '422':
          $ref: '#/components/responses/Generic422'
        '429':
          $ref: '#/components/responses/Generic429'
  /sessions/{sessionId}:
    get:
      tags:
        - QoS Sessions
      summary: Get QoS session information
      description: |
        Querying for QoS session resource information details

        **NOTES:**
        - The access token may be either 2-legged or 3-legged.
        - If a 3-legged access token is used, the end user (and device) associated with the session must also be associated with the access token.
        - The session must have been created by the same API client given in the access token
      operationId: getSession
      security:
        - openId:
            - quality-on-demand:sessions:read
      parameters:
        - name: sessionId
          in: path
          description: Session ID that was obtained from the createSession operation
          required: true
          schema:
            $ref: '#/components/schemas/SessionId'
        - $ref: '#/components/parameters/x-correlator'
      responses:
        '200':
          description: Contains information about active session
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInfo'
              examples:
                SESSION_AVAILABLE:
                  $ref: '#/components/examples/SESSION_AVAILABLE_EXAMPLE'
                SESSION_UNAVAILABLE:
                  $ref: '#/components/examples/SESSION_UNAVAILABLE_EXAMPLE'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
        '429':
          $ref: '#/components/responses/Generic429'
    delete:
      tags:
        - QoS Sessions
      summary: Delete a QoS session
      description: |
        Release resources related to QoS session

        If the notification callback is provided and the `qosStatus` of the session was `AVAILABLE` the client will receive in addition to the response a `QOS_STATUS_CHANGED` event with
        - `qosStatus` as `UNAVAILABLE` and
        - `statusInfo` as `DELETE_REQUESTED`
        There will be no notification event if the `qosStatus` was already `UNAVAILABLE`.

        **NOTES:**
        - The access token may be either 2-legged or 3-legged.
        - If a 3-legged access token is used, the subject associated with the session must also be associated with the access token.
        - The session must must have been created by the same API consumer given in the access token
      operationId: deleteSession
      security:
        - openId:
            - quality-on-demand:sessions:delete
      parameters:
        - name: sessionId
          in: path
          description: Session ID that was obtained from the createSession operation
          required: true
          schema:
            $ref: '#/components/schemas/SessionId'
        - $ref: '#/components/parameters/x-correlator'
      responses:
        '204':
          description: Session deleted
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
        '429':
          $ref: '#/components/responses/Generic429'
  /sessions/{sessionId}/extend:
    post:
      tags:
        - QoS Sessions
      summary: Extend the duration of an active session
      description: |
        Extend the overall session duration of an active QoS session (with qosStatus = AVAILABLE).
        The overall duration of the QoS session, including the additional extended duration, shall not exceed the maximum duration limit fixed for the QoS Profile. If the current duration plus the value of `requestedAdditionalDuration` exceeds the maximum limit, the new overall duration shall be capped to the maximum value allowed.
        An example: For a QoS profile limited to a `maxDuration` of 50,000 seconds, a QoD session was originally created with duration 30,000 seconds. Before the session expires, the developer requests to extend the session by another 30,000 seconds:
        - Previous duration: 30,000 seconds
        - Requested additional duration: 30,000 seconds
        - New overall session duration: 50,000 seconds (the maximum allowed)

        **NOTES:**
        - The access token may be either 2-legged or 3-legged.
        - If a 3-legged access token is used, the subject associated with the session must also be associated with the access token.
        - The session must must have been created by the same API consumer given in the access token
      operationId: extendQosSessionDuration
      security:
        - openId:
            - quality-on-demand:sessions:update
      parameters:
        - name: sessionId
          in: path
          description: Session ID that was obtained from the createSession operation
          required: true
          schema:
            $ref: '#/components/schemas/SessionId'
        - $ref: '#/components/parameters/x-correlator'
      requestBody:
        description: Parameters to extend the duration of an active session
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendSessionDuration'
        required: true
      responses:
        '200':
          description: Contains information about active session
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInfo'
        '400':
          $ref: '#/components/responses/GenericExtendSessionDuration400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
        '409':
          $ref: '#/components/responses/SessionStatusConflict409'
        '429':
          $ref: '#/components/responses/Generic429'
  /retrieve-sessions:
    post:
      tags:
        - QoS Sessions
      summary: Get QoS session information for a device
      description: |
        Querying for QoS session resource information details for a device

        **NOTES:**
        - The access token may be either 2-legged or 3-legged.
          - If a 3-legged access token is used, the subject associated with the session must also be associated with the access token. In this case the optional `device` parameter MUST NOT be provided in the request.
          - If a 2-legged access token is used, the device parameter must be provided and identify a device.
        - The session must have been created by the same API consumer given in the access token
        - If no QoS session is found for the requested device, an empty array is returned.
        - This call uses the POST method instead of GET to comply with the CAMARA Commonalities guidelines for sending sensitive or complex data in API calls. Since the device field may contain personally identifiable information, it should not be sent via GET.
          [CAMARA API Design Guidelines](https://github.com/camaraproject/Commonalities/blob/r2.3/documentation/API-design-guidelines.md#post-or-get-for-transferring-sensitive-or-complex-data)
      operationId: retrieveSessionsByDevice
      parameters:
        - $ref: '#/components/parameters/x-correlator'
      requestBody:
        description: Parameters to get QoS session information by device
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrieveSessionsInput'
        required: true
      responses:
        '200':
          description: Returns the QoS sessions information for a given device. A device may have multiple sessions, thus the response is an array. An empty array is returned if no sessions are found.
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveSessionsOutput'
              examples:
                RETRIEVE_SESSIONS_ONE_ITEM:
                  $ref: '#/components/examples/RETRIEVE_SESSIONS_EXAMPLE'
                RETRIEVE_SESSIONS_NO_ITEMS:
                  $ref: '#/components/examples/RETRIEVE_SESSIONS_EMPTY_EXAMPLE'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/GenericDevice404'
        '422':
          $ref: '#/components/responses/Generic422'
        '429':
          $ref: '#/components/responses/Generic429'
      security:
        - openId:
            - quality-on-demand:sessions:retrieve-by-device
  /retrieve-qos-profiles:
    post:
      tags:
        - QoS Profiles
      summary: Retrieve QoS profiles
      description: |
        Returns all QoS Profiles that match the given criteria.
        **NOTES:**
        - The access token may be either a 2-legged or 3-legged access token.
        - If the access token is 3-legged, all returned QoS Profiles will be available to the subject (device) associated with the access token.
        - This call uses the POST method instead of GET to comply with the CAMARA Commonalities guidelines for sending sensitive or complex data in API calls. Since the device field may contain personally identifiable information, it should not be sent via GET. Additionally, this call may include complex data structures.
          [CAMARA API Design Guidelines](https://github.com/camaraproject/Commonalities/blob/r2.3/documentation/API-design-guidelines.md#post-or-get-for-transferring-sensitive-or-complex-data)
      security:
        - openId:
            - qos-profiles:read
      operationId: retrieveQoSProfiles
      parameters:
        - $ref: '#/components/parameters/x-correlator'
      requestBody:
        description: Parameters to query QoS Profiles for a given device
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosProfileDeviceRequest'
        required: true
      responses:
        '200':
          description: Contains information about QoS Profiles
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QosProfile'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/GenericDevice404'
        '422':
          $ref: '#/components/responses/Generic422'
        '429':
          $ref: '#/components/responses/Generic429'
  /qos-profiles/{name}:
    get:
      tags:
        - QoS Profiles
      summary: Get QoS Profile for a given name
      operationId: getQosProfile
      description: |
        Returns a QoS Profile that matches the given name.

        The access token may be either a 2-legged or 3-legged access token. If the access token is 3-legged, a QoS Profile is only returned if available to all subjects associated with the access token.
      security:
        - openId:
            - qos-profiles:read
      parameters:
        - name: name
          in: path
          description: Qos Profile name
          required: true
          schema:
            $ref: '#/components/schemas/QosProfileName'
        - $ref: '#/components/parameters/x-correlator'
      responses:
        '200':
          description: Contains information about QoS Profiles
          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosProfile'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Generic404'
        '429':
          $ref: '#/components/responses/Generic429'
components:
  securitySchemes:
    openId:
      description: OpenID Connect authentication.
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
    notificationsBearerAuth:
      description: Notification bearer authentication.
      type: http
      scheme: bearer
      bearerFormat: '{$request.body#/sinkCredential.credentialType}'
  schemas:
    Overlay:
      description: |
        Common attributes of openAPI overlay [specification]("https://spec.openapis.org/overlay/latest.html").

        The list of actions MUST be applied in sequential order to ensure a consistent outcome. Actions are applied to 
        the result of the previous action. This enables objects to be deleted in one action and then re-created in a 
        subsequent action, for example. 

        The extends property can be used to indicate that the Overlay was designed to update a specific document. Where no extends 
        is provided this implementation assumes an instance of the Components object '#/components/schemas/Components' is the 'document' root.
      type: object
      properties:
        info:
          $ref: '#/components/schemas/Info-Object'
        extends:
          allOf:
            - $ref: '#/components/schemas/Extends'
          description: |
            URI of the document to overlay.  
            Defaults to the root Components object if omitted.
        actions:
          $ref: '#/components/schemas/Actions'
      required:
        - actions
    CamaraExtendedCloudEventsAttribute:
      type: object
      description: |
        Extended CloudEvents defined attributes for CAMARA.
        'https://raw.githubusercontent.com/cloudevents/spec/main/subscriptions/subscriptions-openapi.yaml#/components/schemas/CloudEventsAttribute'
        Required properties are as follows:
        - id
        - source
        - specversion
        - type
        - time

        'datacontenttype': 'media-type that describes the event payload encoding, must be "application/json" for CAMARA APIs'
        'type' example: org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data
      allOf:
        - $ref: '#/components/schemas/CloudEventsAttribute'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/CamaraCloudEventData'
          required:
            - id
            - source
            - specversion
            - type
            - time
            - data
      discriminator:
        propertyName: type
    org.camaraproject.connected-network-type-subscriptions.v1.detail:
      description: The detail of the requested event subscription.
      type: object
      allOf:
        - $ref: '#/components/schemas/SubscriptionDetail'
        - type: object
          properties:
            device:
              $ref: '#/components/schemas/Device'
          required:
            - device
          additionalProperties: false
    org.camaraproject.connected-network-type-subscriptions.v1.network-type-changed:
      description: event structure for network type change
      allOf:
        - $ref: '#/components/schemas/CamaraExtendedCloudEventsAttribute'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/org.camaraproject.connected-network-type-subscriptions.v1.network-type-changed.data'
          required:
            - data
          additionalProperties: false
      example:
        id: '123655'
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.connected-network-type-subscriptions.v1.network-type-changed
        specversion: '1.0'
        datacontenttype: application/json
        data:
          subscriptionId: '987654321'
          device:
            phoneNumber: '+123456789'
          connectedNetworkType: 5G
        time: '2023-03-22T05:40:23.682Z'
    org.camaraproject.connected-network-type-subscriptions.v1.subscription-ends:
      description: event structure for event subscription ends
      allOf:
        - $ref: '#/components/schemas/CamaraExtendedCloudEventsAttribute'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/org.camaraproject.connected-network-type-subscriptions.v1.subscription-ends.data'
          required:
            - data
          additionalProperties: false
      example:
        id: '124003'
        source: https://dataUsageServer.supertelco.com
        type: org.camaraproject.connected-network-type-subscriptions.v1.subscription-ends
        specversion: '1.0'
        datacontenttype: application/json
        data:
          device:
            phoneNumber: '+123456789'
          terminationReason: SUBSCRIPTION_EXPIRED
          subscriptionId: dv10-h556-rt89-1403
          terminationDescription: Subscription expiry time has been reached
        time: '2024-03-05T15:00:23.682Z'
    org.camaraproject.geofencing-subscriptions.v1.detail:
      description: The detail of the requested event subscription.
      type: object
      allOf:
        - $ref: '#/components/schemas/SubscriptionDetail'
        - type: object
          properties:
            device:
              $ref: '#/components/schemas/Device'
            area:
              $ref: '#/components/schemas/Area'
          required:
            - area
          additionalProperties: false
    org.camaraproject.geofencing-subscriptions.v1.area-left:
      description: Event structure for event when the device leaves the area.
      allOf:
        - $ref: '#/components/schemas/CamaraExtendedCloudEventsAttribute'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/org.camaraproject.geofencing-subscriptions.v1.area-left.data'
          required:
            - data
          additionalProperties: false
      example:
        id: '123655'
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.geofencing-subscriptions.v1.area-left
        specversion: '1.0'
        datacontenttype: application/json
        time: '2023-03-22T05:40:23.682Z'
        data:
          subscriptionId: 987654321
          device:
            phoneNumber: 123456789
          area:
            areaType: CIRCLE
            center:
              latitude: 50.735851
              longitude: 7.10066
            radius: 2000
    org.camaraproject.geofencing-subscriptions.v1.area-entered:
      description: Event structure for event when the device enters the area.
      allOf:
        - $ref: '#/components/schemas/CamaraExtendedCloudEventsAttribute'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/org.camaraproject.geofencing-subscriptions.v1.area-entered.data'
          required:
            - data
          additionalProperties: false
      example:
        id: '123655'
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.geofencing-subscriptions.v1.area-entered
        specversion: '1.0'
        datacontenttype: application/json
        time: '2023-03-22T05:40:23.682Z'
        data:
          subscriptionId: 987654321
          device:
            phoneNumber: 123456789
          area:
            areaType: CIRCLE
            center:
              latitude: 50.735851
              longitude: 7.10066
            radius: 2000
    org.camaraproject.geofencing-subscriptions.v1.subscription-ends:
      description: Event structure for event subscription ends.
      allOf:
        - $ref: '#/components/schemas/CamaraExtendedCloudEventsAttribute'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/org.camaraproject.geofencing-subscriptions.v1.subscription-ends.data'
          required:
            - data
          additionalProperties: false
      example:
        id: '123655'
        source: https://notificationSendServer12.supertelco.com
        type: org.camaraproject.geofencing-subscriptions.v1.subscription-ends
        specversion: '1.0'
        datacontenttype: application/json
        time: '2023-03-22T05:40:23.682Z'
        data:
          subscriptionId: 987654321
          device:
            phoneNumber: 123456789
          area:
            areaType: CIRCLE
            center:
              latitude: 50.735851
              longitude: 7.10066
            radius: 2000
          terminationReason: SUBSCRIPTION_EXPIRED
    org.camaraproject.quality-on-demand.v1.detail:
      description: The detail of the requested event subscription.
      type: object
      allOf:
        - $ref: '#/components/schemas/SubscriptionDetail'
        - type: object
          properties:
            device:
              $ref: '#/components/schemas/Device'
          required:
            - device
          additionalProperties: false
    org.camaraproject.quality-on-demand.v1.qos-status-changed:
      description: Event structure for event when the device leaves the area.
      allOf:
        - $ref: '#/components/schemas/CamaraExtendedCloudEventsAttribute'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/org.camaraproject.quality-on-demand.v1.qos-status-changed.data'
          required:
            - data
          additionalProperties: false
      example:
        id: 83a0d986-0866-4f38-b8c0-fc65bfcda452
        source: https://api.example.com/qod/v1/sessions/123e4567-e89b-12d3-a456-426614174000
        specversion: '1.0'
        type: org.camaraproject.quality-on-demand.v1.qos-status-changed
        time: '2024-06-01T13:00:00Z'
        data:
          sessionId: 123e4567-e89b-12d3-a456-426614174000
          qosStatus: UNAVAILABLE
          statusInfo: DURATION_EXPIRED
    org.camaraproject.capability.v0.detail:
      description: The detail of the requested capability event subscription.
      type: object
      allOf:
        - $ref: '#/components/schemas/SubscriptionDetail'
        - type: object
          properties:
            device:
              $ref: '#/components/schemas/Device'
          additionalProperties: false
    org.camaraproject.capability.v0.capability-bitmap-changed:
      description: Event structure for capability bitmap changed
      allOf:
        - $ref: '#/components/schemas/CamaraExtendedCloudEventsAttribute'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/org.camaraproject.capability.v0.capability-bitmap-changed.data'
          required:
            - data
          additionalProperties: false
      example:
        id: cb1
        source: https://api.example.com/capability/capability-subscriptions/bitmap
        datacontenttype: application/json
        specversion: '1.0'
        type: org.camaraproject.capability.v0.capability-bitmap-changed
        time: '2025-05-06T00:00:00.000Z'
        data:
          capabilityBitmap:
            device:
              phoneNumber: '+123456788'
            overlayExtends:
              - https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
              - https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/qos-profiles.yaml
            mappingVersion: 1.0.0
            camaraCapabilitiesBitmap: 127
    org.camaraproject.capability.v0.capability-info-changed:
      description: Event structure for capability info changed
      allOf:
        - $ref: '#/components/schemas/CamaraExtendedCloudEventsAttribute'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/org.camaraproject.capability.v0.capability-info-changed.data'
          required:
            - data
          additionalProperties: false
      example:
        id: ci1
        source: https://api.example.com/capability/capability-subscriptions/info
        specversion: '1.0'
        datacontenttype: application/json
        type: org.camaraproject.capability.v0.capability-info-changed
        time: '2025-05-06T00:00:00.000Z'
        data:
          capabilityInfo:
            details:
              - name: cap-qod-adi
                version: 0.0.2
                createdAt: '2025-05-09T14:25:38Z'
                overlayExtends:
                  - https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
                  - https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/qos-profiles.yaml
                device:
                  phoneNumber: '+123456788'
                mappingVersion: 1.0.0
                camaraCapabilitiesBitmap: 1
                bitmapCapabilities:
                  '0':
                    name: rr-qod-adi
                    version: 0.0.1
                    restrictions:
                      - name: org.camaraproject.capability.v0.object-instance-restriction.accepted-device-identifiers
                        version: 0.0.1
                        extends: https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
                        actions:
                          - target: $.components.schemas['Device'].properties['ipv4Address']
                            remove: true
                          - target: $.components.schemas['Device'].properties['networkAccessIdentifier']
                            remove: true
    Protocol:
      type: string
      enum:
        - HTTP
        - MQTT3
        - MQTT5
        - AMQP
        - NATS
        - KAFKA
      description: REQUIRED. Identifier of a delivery protocol.
      example: HTTP
    ProtocolSettings:
      type: object
      additionalProperties: false
    AMQPSettings:
      type: object
      allOf:
        - $ref: '#/components/schemas/ProtocolSettings'
        - properties:
            address:
              type: string
            linkName:
              type: string
            sendersettlementmode:
              type: string
              enum:
                - settled
                - unsettled
            linkProperties:
              type: object
              additionalProperties:
                type: string
    ApacheKafkaSettings:
      type: object
      allOf:
        - $ref: '#/components/schemas/ProtocolSettings'
        - properties:
            topicname:
              type: string
            partitionkeyextractor:
              type: string
            clientid:
              type: string
            ackmode:
              type: integer
          required:
            - topicname
    HTTPSettings:
      type: object
      allOf:
        - $ref: '#/components/schemas/ProtocolSettings'
        - properties:
            headers:
              type: object
              additionalProperties:
                type: string
            method:
              type: string
    MQTTSettings:
      type: object
      allOf:
        - $ref: '#/components/schemas/ProtocolSettings'
        - properties:
            topicname:
              type: string
            qos:
              type: integer
              format: int32
            retain:
              type: boolean
            expiry:
              type: integer
              format: int32
            userproperties:
              type: object
          required:
            - topicname
    NATSSettings:
      type: object
      allOf:
        - $ref: '#/components/schemas/ProtocolSettings'
        - properties:
            subject:
              type: string
          required:
            - subject
    SinkCredential:
      type: object
      properties:
        credentialtype:
          type: string
          enum:
            - PLAIN
            - ACCESSTOKEN
            - REFRESHTOKEN
          description: The type of the credential.
      additionalProperties: false
    AccessTokenCredential:
      type: object
      description: An access token credential.
      allOf:
        - $ref: '#/components/schemas/SinkCredential'
        - properties:
            accesstoken:
              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.
              type: string
            accesstokenexpiresutc:
              type: string
              format: date-time
              description: RECOMMENDED. An absolute UTC instant at which the token shall be considered expired.
            accesstokentype:
              description: OPTIONAL. )Type of the access token (See https://tools.ietf.org/html/rfc6749#section-7.1).
              type: string
              default: bearer
          required:
            - accesstoken
            - accesstokenexpiresutc
    PlainCredential:
      type: object
      description: A plain credential as a combination of an identifier and a secret.
      allOf:
        - $ref: '#/components/schemas/SinkCredential'
        - properties:
            identifier:
              description: The identifier might be an account or username.
              type: string
            secret:
              description: The secret might be a password or passphrase.
              type: string
    RefreshTokenCredential:
      type: object
      description: An access token credential with a refresh token.
      allOf:
        - $ref: '#/components/schemas/AccessTokenCredential'
        - type: object
          properties:
            refreshtoken:
              description: REQUIRED. An refresh token credential used to acquire access tokens.
              type: string
            refreshtokenendpoint:
              type: string
              format: uri
              description: REQUIRED. A URL at which the refresh token can be traded for an access token.
      required:
        - refreshtoken
        - refreshtokenendpoint
    Filter:
      title: Filter
      description: A filter from a selection of multiple filter types and dialects
      type: object
      additionalProperties: true
    AllFilter:
      allOf:
        - $ref: '#/components/schemas/Filter'
        - type: object
          description: all filter
          properties:
            all:
              description: This filter evaluates to 'true' if all contained filters are 'true'
              type: array
              minItems: 1
              items:
                title: Filter entry
                oneOf:
                  - $ref: '#/components/schemas/Filter'
                  - $ref: '#/components/schemas/AllFilter'
                  - $ref: '#/components/schemas/AnyFilter'
                  - $ref: '#/components/schemas/NotFilter'
                  - $ref: '#/components/schemas/ExactFilter'
                  - $ref: '#/components/schemas/PrefixFilter'
                  - $ref: '#/components/schemas/SuffixFilter'
                  - $ref: '#/components/schemas/SqlFilter'
          additionalProperties: false
    AnyFilter:
      allOf:
        - $ref: '#/components/schemas/Filter'
        - type: object
          description: any filter
          properties:
            any:
              description: This filter evaluates to 'true' if any contained filters are 'true'
              type: array
              minItems: 1
              items:
                title: Filter entry
                oneOf:
                  - $ref: '#/components/schemas/Filter'
                  - $ref: '#/components/schemas/AllFilter'
                  - $ref: '#/components/schemas/AnyFilter'
                  - $ref: '#/components/schemas/NotFilter'
                  - $ref: '#/components/schemas/ExactFilter'
                  - $ref: '#/components/schemas/PrefixFilter'
                  - $ref: '#/components/schemas/SuffixFilter'
                  - $ref: '#/components/schemas/SqlFilter'
          additionalProperties: false
    NotFilter:
      allOf:
        - $ref: '#/components/schemas/Filter'
        - type: object
          description: not filter
          properties:
            not:
              type: object
              oneOf:
                - $ref: '#/components/schemas/Filter'
                - $ref: '#/components/schemas/AllFilter'
                - $ref: '#/components/schemas/AnyFilter'
                - $ref: '#/components/schemas/NotFilter'
                - $ref: '#/components/schemas/ExactFilter'
                - $ref: '#/components/schemas/PrefixFilter'
                - $ref: '#/components/schemas/SuffixFilter'
                - $ref: '#/components/schemas/SqlFilter'
          additionalProperties: false
    CloudEventsAttribute:
      type: object
      description: CloudEvents defined attributes.
      additionalProperties:
        type: string
      properties:
        id:
          type: string
          description: Identifies the event.
        source:
          type: string
          description: Identifies the context in which an event happened.
        specversion:
          type: string
          description: The version of the CloudEvents specification which the event uses.
        type:
          type: string
          description: Describes the type of event related to the originating occurrence.
        datacontenttype:
          type: string
          description: Content type of the data value.
        dataschema:
          type: string
          description: Identifies the schema that data adheres to.
        subject:
          type: string
          description: Describes the subject of the event in the context of the event producer.
        time:
          type: string
          description: Timestamp of when the occurrence happened.
    ExactFilter:
      allOf:
        - $ref: '#/components/schemas/Filter'
        - type: object
          title: exact filter
          description: This filter evaluates to 'true' if the 'value' exactly matches the value of the indicated CloudEvents context attribute
          properties:
            exact:
              $ref: '#/components/schemas/CloudEventsAttribute'
          additionalProperties: false
    PrefixFilter:
      allOf:
        - $ref: '#/components/schemas/Filter'
        - type: object
          title: prefix filter
          description: This filter evaluates to 'true' if the 'value' is a prefix of the value of the indicated CloudEvents context attribute
          properties:
            prefix:
              $ref: '#/components/schemas/CloudEventsAttribute'
          additionalProperties: false
    SuffixFilter:
      allOf:
        - $ref: '#/components/schemas/Filter'
        - type: object
          title: suffix filter
          description: This filter evaluates to 'true' if the 'value' is a suffix of the value of the indicated CloudEvents context attribute
          properties:
            suffix:
              $ref: '#/components/schemas/CloudEventsAttribute'
          additionalProperties: false
    SqlFilter:
      allOf:
        - $ref: '#/components/schemas/Filter'
        - type: object
          description: CESQL filter
          properties:
            sql:
              type: string
              description: The CESQL expression
          additionalProperties: true
    SubscriptionRequest:
      properties:
        protocol:
          $ref: '#/components/schemas/Protocol'
        protocolsettings:
          oneOf:
            - $ref: '#/components/schemas/ProtocolSettings'
            - $ref: '#/components/schemas/AMQPSettings'
            - $ref: '#/components/schemas/ApacheKafkaSettings'
            - $ref: '#/components/schemas/HTTPSettings'
            - $ref: '#/components/schemas/MQTTSettings'
            - $ref: '#/components/schemas/NATSSettings'
        sink:
          type: string
          format: url
          description: REQUIRED. The address to which events shall be delivered using the selected protocol.
          example: https://endpoint.example.com/webhook
        sinkcredential:
          oneOf:
            - $ref: '#/components/schemas/SinkCredential'
            - $ref: '#/components/schemas/AccessTokenCredential'
            - $ref: '#/components/schemas/PlainCredential'
            - $ref: '#/components/schemas/RefreshTokenCredential'
        source:
          type: string
          format: uri-reference
          description: OPTIONAL. Source to which the subscription applies. May be implied by the request address.
        types:
          description: CloudEvent types eligible to be delivered by this subscription
          type: array
          items:
            type: string
        filters:
          description: This filter evaluates to 'true' if all contained filters are 'true'
          type: array
          items:
            title: Filter entry
            oneOf:
              - $ref: '#/components/schemas/Filter'
              - $ref: '#/components/schemas/AllFilter'
              - $ref: '#/components/schemas/AnyFilter'
              - $ref: '#/components/schemas/NotFilter'
              - $ref: '#/components/schemas/ExactFilter'
              - $ref: '#/components/schemas/PrefixFilter'
              - $ref: '#/components/schemas/SuffixFilter'
              - $ref: '#/components/schemas/SqlFilter'
        config:
          description: OPTIONAL. Implementation-specific configuration parameters needed by the subscription manager for acquiring events.
          type: object
          additionalProperties:
            type: string
      required:
        - sink
        - protocol
    SubscriptionDetail:
      type: object
      description: Base schema for all domain-specific subscriptionDetail definitions.
    CamaraSubscriptionConfig:
      description: |
        Implementation-specific configuration parameters are needed by the subscription manager for acquiring events.
        In CAMARA we have predefined attributes like `subscriptionExpireTime`, `subscriptionMaxEvents`, `initialEvent`.
        Specific event type attributes must be defined in `subscriptionDetail`.
        Note: If a request is performed for several event types, all subscribed events will use the same `config` parameters.
      type: object
      additionalProperties: false
      required:
        - subscriptionDetail
      properties:
        subscriptionDetail:
          $ref: '#/components/schemas/SubscriptionDetail'
        subscriptionStartTime:
          type: string
          format: date-time
          example: '2023-01-17T13:18:23.682Z'
          description: The subscription start time (in date-time format) requested by the API consumer.
        subscriptionExpireTime:
          type: string
          format: date-time
          example: '2023-01-17T13:18:23.682Z'
          description: The subscription expiration time (in date-time format) requested by the API consumer.
        subscriptionMaxEvents:
          type: integer
          description: |
            Identifies the maximum number of event reports to be generated (>=1) requested by the API consumer - Once this number is reached, the subscription ends.
            Note on combined usage of `initialEvent` and `subscriptionMaxEvents`:
            If an event is triggered following `initialEvent` set to `true`, this event will be counted towards `subscriptionMaxEvents`.
          minimum: 1
          example: 5
        eventBatchSize:
          type: integer
          description: |
            Identifies the maximum number of event reports to be generated (>=1) ina a batch requested by the API consumer - Once this number is reached for current batch, the events emit to the 'sink'.
            Batching: Events are pushed in batches of up to config.eventBatchSize.
          minimum: 1
          example: 5
        cacheResyncRequest:
          type: boolean
          description: |
            Set to `true` by API consumer if consumer wants to get cached state as soon as the subscription is created. 
            A cache resync isn't a request for historical event data. It only restores the current cache state.

            Treat a cache resync request as if 'initialEvent' = 'true' and 'subscriptionStartTime' is now. 'eventResyncTime' value, if provided, is ignored by cache resync operation. 
        eventResyncTime:
          type: string
          format: date-time
          example: '2023-01-17T13:18:23.682Z'
          description: The event resync start time (in date-time format) requested by the API consumer.
        eventResyncRequest:
          type: boolean
          description: |
            Set to `true` by API consumer if consumer wants to get historical events as soon as the subscription is created.
            Treat the event resync request as if 'initialEvent' = 'true' and use the provided 'eventResyncTime' in place of 'subscriptionStartTime'.

            Event resync becomes truly historical only if the system retains every event and can replay them all. 
            In practice, we should treat event resync as a “best effort” operation, dependent on what the implementation can actually provide.
            Not every API needs or should offer a batching/resync capability.         
        initialEvent:
          type: boolean
          description: |
            Set to `true` by API consumer if consumer wants to get an event as soon as the subscription is created and current situation reflects event request.
            Example: Consumer request area entered event. If consumer sets initialEvent to true and device is already in the geofence, an event is triggered.
        startsAt:
          type: string
          readOnly: true
          format: date-time
          description: Date when the event subscription will begin/began. This attribute must not be present in the POST request as it is provided by API server. It must be present in GET endpoints.
        expiresAt:
          type: string
          readOnly: true
          format: date-time
          description: |
            Date when the event subscription will expire. Only provided when `subscriptionExpireTime` is indicated by API client or Telco Operator has a specific policy about that.
            This attribute must not be present in the POST request as it is provided (optionally) by API server. 
            This attribute must be provided by the server if subscriptionExpireTime is provided in the request and server is not able to handle it.
        status:
          type: string
          readOnly: true
          description: |-
            Current status of the subscription - Management of Subscription State engine is not mandatory for now. Note not all statuses may be considered to be implemented. Details:
              - `ACTIVATION_REQUESTED`: Subscription creation (POST) is triggered but subscription creation process is not finished yet.
              - `CACHE_RESYNCING`: current cache state restore in progress.
              - `CACHE_RESYNC_COMPLETED`: current cache state restored.   
              - `EVENT_RESYNCING`: historical events replay in progress.
              - `EVENT_RESYNC_COMPLETED`: historical events replay completed.                                        
              - `ACTIVE`: Subscription creation process is completed. Subscription is fully operative.
              - `INACTIVE`: Subscription is temporarily inactive, but its workflow logic is not deleted.
              - `EXPIRED`: Subscription is ended (no longer active). This status applies when subscription is ended due to `SUBSCRIPTION_EXPIRED` or `ACCESS_TOKEN_EXPIRED` event.
              - `DELETED`: Subscription is ended as deleted (no longer active). This status applies when subscription information is kept (i.e. subscription workflow is no longer active but its meta-information is kept).
          enum:
            - ACTIVATION_REQUESTED
            - CACHE_RESYNCING
            - CACHE_RESYNC_COMPLETED
            - EVENT_RESYNCING
            - EVENT_RESYNC_COMPLETED
            - ACTIVE
            - EXPIRED
            - INACTIVE
            - DELETED
    CamaraExtendedSubscriptionRequest:
      type: object
      additionalProperties: false
      description: |
        Extended subscription request with enhanced config options.
      allOf:
        - $ref: '#/components/schemas/SubscriptionRequest'
        - type: object
          properties:
            config:
              $ref: '#/components/schemas/CamaraSubscriptionConfig'
          required:
            - types
            - config
    SubscriptionId:
      type: string
      description: |
        The unique identifier of the subscription in the scope of the subscription manager. When this information is contained 
        within an event notification, this concept SHALL be referred as `subscriptionId` as per [Commonalities Event Notification 
        Model](https://github.com/camaraproject/Commonalities/blob/main/documentation/API-design-guidelines.md#122-event-notification).
      example: qs15-h556-rt89-1298
    CamaraExtendedSubscription:
      type: object
      additionalProperties: false
      title: Subscription
      allOf:
        - $ref: '#/components/schemas/CamaraExtendedSubscriptionRequest'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/SubscriptionId'
      required:
        - id
        - sink
        - protocol
    ErrorInfo:
      type: object
      required:
        - message
        - status
        - code
      properties:
        message:
          type: string
          description: A human readable description of what the event represent
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: Friendly Code to describe the error
    SubscriptionAsync:
      description: Response for an event-type subscription request managed asynchronously (Creation or Deletion).
      type: object
      properties:
        id:
          $ref: '#/components/schemas/SubscriptionId'
    CamaraCloudEventData:
      type: object
      description: Event details payload described in each CAMARA API and referenced by its type
      additionalProperties: true
      properties:
        syncStatus:
          type: string
          enum:
            - CACHE_RESYNCING
            - CACHE_RESYNC_COMPLETED
            - EVENT_RESYNCING
            - EVENT_RESYNC_COMPLETED
          description: |
            Optional. If present, indicates the subscription's sync phase:
            • `CACHE_RESYNCING`: current cache state restore in progress. 
            • `CACHE_RESYNC_COMPLETED`: current cache state restored.  
            • `EVENT_RESYNCING`: historical events replay in progress.
            • `EVENT_RESYNC_COMPLETED`: historical events replay completed.            
    PhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: ^\+[1-9][0-9]{4,14}$
      example: '+123456789'
    NetworkAccessIdentifier:
      description: A public identifier addressing a subscription in a mobile network. In 3GPP terminology, it corresponds to the GPSI formatted with the External Identifier ({Local Identifier}@{Domain Identifier}). Unlike the telephone number, the network access identifier is not subjected to portability ruling in force, and is individually managed by each operator.
      type: string
      example: 123456789@domain.com
    SingleIpv4Addr:
      description: A single IPv4 address with no subnet mask
      type: string
      format: ipv4
      example: 84.125.93.10
    Port:
      description: TCP or UDP port number
      type: integer
      minimum: 0
      maximum: 65535
    DeviceIpv4Addr:
      type: object
      description: |
        The device should be identified by either the public (observed) IP address and port as seen by the application server, or the private (local) and any public (observed) IP addresses in use by the device (this information can be obtained by various means, for example from some DNS servers).

        If the allocated and observed IP addresses are the same (i.e. NAT is not in use) then  the same address should be specified for both publicAddress and privateAddress.

        If NAT64 is in use, the device should be identified by its publicAddress and publicPort, or separately by its allocated IPv6 address (field ipv6Address of the Device object)

        In all cases, publicAddress must be specified, along with at least one of either privateAddress or publicPort, dependent upon which is known. In general, mobile devices cannot be identified by their public IPv4 address alone.
      properties:
        publicAddress:
          $ref: '#/components/schemas/SingleIpv4Addr'
        privateAddress:
          $ref: '#/components/schemas/SingleIpv4Addr'
        publicPort:
          $ref: '#/components/schemas/Port'
      anyOf:
        - required:
            - publicAddress
            - privateAddress
        - required:
            - publicAddress
            - publicPort
      example:
        publicAddress: 84.125.93.10
        publicPort: 59765
    DeviceIpv6Address:
      description: |
        The device should be identified by the observed IPv6 address, or by any single IPv6 address from within the subnet allocated to the device (e.g. adding ::0 to the /64 prefix).
      type: string
      format: ipv6
      example: 2001:db8:85a3:8d3:1319:8a2e:370:7344
    Device:
      description: |
        End-user equipment able to connect to a mobile network. Examples of devices include smartphones or IoT sensors/actuators.
            The developer can choose to provide the below specified device identifiers:
            * `ipv4Address`
            * `ipv6Address`
            * `phoneNumber`
            * `networkAccessIdentifier`
            NOTE1: the network operator might support only a subset of these options. The API invoker can provide multiple identifiers to be compatible across different network operators. In this case the identifiers MUST belong to the same device.
            NOTE2: as for this Commonalities release, we are enforcing that the networkAccessIdentifier is only part of the schema for future-proofing, and CAMARA does not currently allow its use. After the CAMARA meta-release work is concluded and the relevant issues are resolved, its use will need to be explicitly documented in the guidelines.
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
        networkAccessIdentifier:
          $ref: '#/components/schemas/NetworkAccessIdentifier'
        ipv4Address:
          $ref: '#/components/schemas/DeviceIpv4Addr'
        ipv6Address:
          $ref: '#/components/schemas/DeviceIpv6Address'
      minProperties: 1
    Extends:
      description: |
        URI reference that identifies the target document this overlay applies to.
      type: string
      format: uri
      minLength: 1
    CamaraCapabilityQuery:
      description: Common attributes of CAMARA capability query
      type: object
      additionalProperties: false
      properties:
        device:
          $ref: '#/components/schemas/Device'
        overlayExtends:
          description: list of unique overlay extends in the query
          type: array
          minItems: 1
          maxItems: 20
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Extends'
      required:
        - overlayExtends
    CamaraCapabilityQueryRequest:
      description: A list of queries in the request.
      type: object
      additionalProperties: true
      properties:
        queries:
          description: A list of CamaraCapabilityQuery
          type: array
          minItems: 1
          maxItems: 100
          uniqueItems: true
          items:
            $ref: '#/components/schemas/CamaraCapabilityQuery'
        subscriptionRequest:
          $ref: '#/components/schemas/CamaraExtendedSubscriptionRequest'
      required:
        - queries
    VersionedName:
      description: |
        An abstract base object containing names with versioning
      type: object
      properties:
        name:
          description: The item's name. Ideally, it is a unique value for its type. This value MUST NOT contain the semicolon - ';'
          type: string
          example: cap1
          minLength: 3
          maxLength: 256
          pattern: ^[^;]*$
        version:
          description: The version of the object instance.
          type: string
          example: 0.0.1
          minLength: 1
          pattern: ^(0|[1-9]\d*)\. (0|[1-9]\d*)\. (0|[1-9]\d*) (?:-((?:0|[1-9]\d*|\d*[A-Za-z-][0-9A-Za-z-]*) (?:\.(?:0|[1-9]\d*|\d*[A-Za-z-][0-9A-Za-z-]*))*))? (?:\+([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?$
        specifyingBody:
          description: Entity's specification organization (reversed fqdn format)
          type: string
          minLength: 1
      required:
        - name
        - version
    Metadata:
      description: |
        Tighten validation, avoid client/server drift, and make structures robust.      
      additionalProperties: false
      type: object
      properties:
        description:
          type: string
          description: Human-readable description of the entity
        createdAt:
          type: string
          format: date-time
          description: |
            RFC 3339 timestamp when this mapping was first published.
            Providers must not set times in the future.
          example: '2025-05-09T14:25:38Z'
        lastModifiedAt:
          type: string
          format: date-time
          description: |
            RFC 3339 timestamp of the last non-breaking update.
            Providers must not set times in the future.
          example: '2025-05-10T12:03:00Z'
        deprecatedAt:
          type: string
          format: date-time
          description: RFC 3339 timestamp after which this entity is no longer be applicable.
        mappingHash:
          type: string
          pattern: ^[A-Fa-f0-9]{64}$
          description: SHA-256 digest of the canonical JSON representation of this mapping.
          example: 5d41402abc4b2a76b9719d911017c592cf0c58f2b3b65af6f88ab3a2b4d6996f
        traceID:
          type: string
          description: Trace Identifier used across multiple systems.
    Info-Object:
      description: Information Object
      type: object
      properties:
        title:
          type: string
          minLength: 1
        verison:
          type: string
          minLength: 1
      required:
        - title
        - version
    Action-Object:
      type: object
      additionalProperties: false
      description: |
        Describes a change to be applied to every node selected by **target**.
        Exactly one of **update** or **remove** MUST be present (XOR).
      properties:
        target:
          type: string
          pattern: ^\$
          description: |
            **JSONPath** (RFC 9535 §4) selector that yields zero or more **non-null** 
            nodes or "results". The results MAY resolve to an object or array.

            **JSONPath** (RFC 9535 §4) examples:  
              `$.paths['/foo'].get` &nbsp;&nbsp;`$..security[*]` 
        update:
          type: object
          description: |
            A non-null replacement fragment to apply to the selected node(s).
          example:
            foo: bar
        remove:
          type: boolean
          description: |
            When **true**, the selected node(s) are deleted
          default: false
          example: true
      oneOf:
        - required:
            - update
          not:
            required:
              - remove
        - required:
            - remove
          not:
            required:
              - update
    Actions:
      description: A non-empty, ordered list of actions to be applied to the target document.
      type: array
      minItems: 1
      uniqueItems: true
      items:
        $ref: '#/components/schemas/Action-Object'
    InstanceLocationSyntax:
      description: A string whose format is Open API Runtime Expression or JSON Path.
      type: string
      minLength: 1
      oneOf:
        - x-camara-targetSyntax: runtimeexpression
          pattern: |
            ^\$(?:url|method|statusCode
              |request\.(?:header\.[!#$%&'*+\-\.\^_`|~0-9A-Za-z]+
                            |query\.[^\s\/]+
                            |path\.[^\s\/]+
                            |body(?:#\/(?:[^\/~]|~0|~1)+(?:\/(?:[^\/~]|~0|~1)+)*)?)
              |response\.(?:header\.[!#$%&'*+\-\.\^_`|~0-9A-Za-z]+
                              |body(?:#\/(?:[^\/~]|~0|~1)+(?:\/(?:[^\/~]|~0|~1)+)*)?))
          minLength: 1
        - x-camara-targetSyntax: jsonPointer
          pattern: ^(/([^/~]|~[01])*)*$
          minLength: 1
    InstanceLocation:
      description: |
        A location in the JSON document that is an instance of an OpenAPI Schema.

        It provides an optional endpoint to restrict it as well as the location.

        All strings follow a Open API Runtime Expression or JSON Pointer (RFC 6901) format.
      type: object
      properties:
        endpoint:
          description: Optional endpoint path of a URI that MUST be present in the request/response.
          allOf:
            - $ref: '#/components/schemas/InstanceLocationSyntax'
        location:
          description: The location of the target result.
          allOf:
            - $ref: '#/components/schemas/InstanceLocationSyntax'
      additionalProperties: false
      required:
        - location
    SchemaRestrictionMeta:
      type: object
      description: |
        Restriction applicable to any target at runtime.
        Based upon the JSON Schema   [A Vocabulary for Basic Meta-Data Annotations](https://www.ietf.org/archive/id/draft-bhutton-json-schema-validation-01.html#name-a-vocabulary-for-basic-meta).
      additionalProperties: false
      properties:
        deprecated:
          type: boolean
          description: Mark as deprecated.
        readOnly:
          type: boolean
          description: Mark as read-only.
        writeOnly:
          type: boolean
          description: Mark as write-only.
        default:
          type: string
          description: Default value to apply.
    SchemaRestrictionAnyInstance:
      type: object
      description: |
        Restriction applicable to any target at runtime.
        Based upon the JSON Schema   [Validation keywords for Any instances](https://www.ietf.org/archive/id/draft-bhutton-json-schema-validation-01.html#name-validation-keywords-for-any).
          additionalProperties: false
      properties:
        type:
          type: string
          enum:
            - null
            - boolean
            - object
            - array
            - number
            - string
            - integer
          description: |
            Restrict the type of the value. Only applicable when the type was not initially specified or matches the target's current type.
        enum:
          type: array
          items:
            type: string
          description: Restrict allowed values (must be a subset of the original enum).
        const:
          type: string
          description: Force the field to have a constant value.
    SchemaRestrictionNumeric:
      type: object
      description: |
        Restriction applicable to numeric ranges (for example min/max values).
        Based upon the JSON Schema   [Validation keywords for Numeric Instances](https://www.ietf.org/archive/id/draft-bhutton-json-schema-validation-01.html#name-validation-keywords-for-num).
      additionalProperties: false
      properties:
        multipleOf:
          type: number
          minimum: 1
          description: Value MUST be a multiple of this number.
        maximum:
          type: number
          description: Value MUST be less than or equal to this number.
        minimum:
          type: number
          description: Value MUST be greater than or equal to this number.
        exclusiveMaximum:
          type: number
          description: Value MUST be strictly less than this number.
        exclusiveMinimum:
          type: number
          description: Value MUST be strictly greater than this number.
    SchemaRestrictionString:
      type: object
      description: |
        Restriction applicable to string fields (length or pattern).
        Based upon the JSON Schema   [Validation keywords for Strings](https://www.ietf.org/archive/id/draft-bhutton-json-schema-validation-01.html#name-validation-keywords-for-str).
      additionalProperties: false
      properties:
        maxLength:
          type: integer
          minimum: 0
          description: Maximum string length.
        minLength:
          type: integer
          minimum: 0
          description: Minimum string length.
        pattern:
          type: string
          description: Regular-expression pattern the string MUST match.
    SchemaRestrictionArray:
      type: object
      description: |
        Restriction applicable to arrays (size or uniqueness).
        Based upon the JSON Schema   [Validation keywords for Array Instances](https://www.ietf.org/archive/id/draft-bhutton-json-schema-validation-01.html#name-validation-keywords-for-arr).
      additionalProperties: false
      properties:
        maxItems:
          type: integer
          minimum: 0
          description: Maximum number of items.
        minItems:
          type: integer
          minimum: 0
          description: Minimum number of items.
        uniqueItems:
          type: boolean
          description: If **true**, all items MUST be unique.
        maxContains:
          type: integer
          minimum: 0
          description: Maximum count for items that match the `contains` schema.
        minContains:
          type: integer
          minimum: 0
          description: Minimum count for items that match the `contains` schema.
    SchemaRestrictionObject:
      type: object
      description: |
        Restriction applicable to object structures.
        Based upon the JSON Schema   [Validation keywords for Object Instances](https://www.ietf.org/archive/id/draft-bhutton-json-schema-validation-01.html#name-validation-keywords-for-obj).
      additionalProperties: false
      properties:
        maxProperties:
          type: integer
          minimum: 0
          description: Maximum number of object properties.
        minProperties:
          type: integer
          minimum: 0
          description: Minimum number of object properties.
        required:
          type: array
          items:
            type: string
          description: List of required properties (MUST already exist in the schema).
        dependentRequired:
          type: array
          items:
            type: string
          description: '[`dependentRequired`](https://json-schema.org/draft/2020-12/json-schema-validation#name-validation-keywords-for-obj)'
        excludedProperties:
          type: array
          items:
            type: string
          description: Properties that MUST be absent.
    SchemaRestrictionParameter:
      type: object
      description: |
        Restriction that applies only to HTTP request parameters (e.g. query parameters).
        Based upon the OpenAPI *Parameter Object* and provides:
        - Mandating the use of an optional parameter   - Allowing empty values
      additionalProperties: false
      properties:
        allowEmptyValue:
          type: boolean
          description: |
            Permits empty values. MAY be **true** only if the original schema did not explicitly specify `allowEmptyValue: false`.
        mandatory:
          type: boolean
          description: |
            Mandates the use of an otherwise-optional parameter. Allowed only when:   1. The original schema does **not** declare `deprecated: true`, and   2. The original schema does **not** set `mandatory` to the opposite value.
    SchemaRestrictionOperation:
      type: object
      description: |
        Restriction that applies to an absolute or relative path (operation).
        Based upon the OpenAPI *Operation Object* and provides:
        - `notImplemented`   - `notAvailable`
      additionalProperties: false
      properties:
        notImplemented:
          type: boolean
          description: Marks the operation as unimplemented. Invocation MUST return **501 Not Implemented**.
        notAvailable:
          type: boolean
          description: Marks the operation as temporarily unavailable. Invocation MUST return **503 Service Unavailable**.
    SchemaRestrictionPresence:
      type: object
      description: |
        Restriction that applies to runtime presence of the target.
      additionalProperties: false
      properties:
        presence:
          type: boolean
          description: |
            When **true**, at least one instance matching the target JSON Pointer or JSON Path **MUST** be present.   When **false**, no such instance **MAY** be present.
    SchemaRestriction:
      description: |
        Single schema update that refines and restricts the target.  
        This update **MUST** be compatible with the referenced target.
      type: object
      additionalProperties: false
      oneOf:
        - $ref: '#/components/schemas/SchemaRestrictionMeta'
        - $ref: '#/components/schemas/SchemaRestrictionAnyInstance'
        - $ref: '#/components/schemas/SchemaRestrictionNumeric'
        - $ref: '#/components/schemas/SchemaRestrictionString'
        - $ref: '#/components/schemas/SchemaRestrictionArray'
        - $ref: '#/components/schemas/SchemaRestrictionObject'
        - $ref: '#/components/schemas/SchemaRestrictionParameter'
        - $ref: '#/components/schemas/SchemaRestrictionOperation'
        - $ref: '#/components/schemas/SchemaRestrictionPresence'
    SchemaRestrictions:
      description: |
        A set of schema constraints evaluated against a single target.

        - **restrictions** - An array (min = 1) of `SchemaRestriction` objects.  
          Each restriction returns a Boolean result when applied to the target.

        - **operator** - Optional logical operator that combines the restriction
          results. Supported values are: **and** (default), **or**, **not**.  
          When a single restrictions is supplied, **not** negates that result.

        If `operator` is omitted, **and** is assumed. 

        If only one restriction is present, `operator: not` will negate it. Values of `operator: and` and
        `operator: or` are ignored.

        If `operator` is present, `restrictions` **MUST** also be present.
      type: object
      properties:
        restrictions:
          description: An array of `SchemaRestriction` objects.
          type: array
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/SchemaRestriction'
        operator:
          description: |
            Logical operator that combines the results of all restrictions.

            - **and** - All restrictions MUST be true.  
            - **or** - At least one restriction MUST be true.  
            - **not** - No restriction MAY be true.  For a single restriction this simply negates the result.
          type: string
          enum:
            - and
            - or
            - not
          default: and
      required:
        - restrictions
    CamaraAction:
      type: object
      description: |
        Extends a standard Overlay Action-Object by 
        a. refining update to ONLY accept SchemaRestriction
        b. letting the API provider pre-compute exactly which nodes will be 
           affected, using either JSON Pointers or OpenAPI runtime expressions. 
           This makes it possible to:

        1. **target** an OpenAPI document fragment (via JSONPath).
        2. **Resolve** that target against an instance of the Open API schema
            into one or more concrete locations—each expressed as either a JSON Pointer 
            or an OpenAPI runtime expression.
        3. **Apply** the `update` or `remove` action deterministically to those
          resolved locations.

        By including `targetLocations`, clients can skip the extra step of evaluating
        `target` themselves against instances of the schema, ensuring precise, 
        unambiguous application and enabling robust validation through attached `SchemaRestrictions`. 
        When targetLocations is present, any target value MUST be ignored.    
      allOf:
        - $ref: '#/components/schemas/Action-Object'
      properties:
        id:
          type: string
          description: Identifier for this action. Used for tracability. Each id MUST be unique within the overlay.
        targetLocations:
          description: |
            A non-empty list of explicit document locations—specified as a
              InstanceLocation. These values override the generic `target` 
              selector.
              
              All entries MUST use the same syntax (Runtime Expression or JSON Pointer).
          type: array
          minItems: 1
          maxItems: 30
          items:
            $ref: '#/components/schemas/InstanceLocation'
        update:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SchemaRestrictions'
        instanceUpdate:
          description: An update of an instance document's value.
          type: object
        instanceRemove:
          description: A boolean indicating the result's value should be removed from the instance's document.
          type: boolean
        forceAction:
          type: boolean
          description: |
            When **true**, and **restrictions** are satisfied, the specified
            **instanceUpdate** or **instanceRemove** MUST be enforced (no silent failures).
            If **forceAction** is present, either **instanceUpdate** or **instanceRemove**
            MUST also be present.
          default: true
          example: true
      anyOf:
        - required:
            - target
        - required:
            - targetLocations
      not:
        required:
          - instanceUpdate
          - instanceRemove
      oneOf:
        - not:
            required:
              - forceAction
        - allOf:
            - required:
                - forceAction
            - oneOf:
                - required:
                    - instanceUpdate
                - required:
                    - instanceRemove
    CamaraOverlay:
      description: |
        Common attributes of a CAMARA Overlay.
        It extends OpenAPI Overlay Specification v1.0.0 for restriction-only schema patches.
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/Overlay'
        - $ref: '#/components/schemas/VersionedName'
        - $ref: '#/components/schemas/Metadata'
        - type: object
          properties:
            actions:
              description: A ordered list of actions
              type: array
              minItems: 1
              maxItems: 20
              uniqueItems: true
              items:
                $ref: '#/components/schemas/CamaraAction'
            operator:
              description: |
                Logical operator combining the results of all actions:

                - **and**: all actions must succeed; processing stops on first failure  
                - **or**: failed actions are skipped  
              type: string
              enum:
                - and
                - or
              default: and
          required:
            - name
            - version
            - actions
    Footprint:
      description: |
        The coverage area to which capabilities apply. They help define the context in which the features are relevant.    
        There are many ways to describe a footprint -- for example, by address range (e.g., IPv4 CIDR or IPv6 CIDR (Classless Inter-Domain Routing), 
        network ID (e.g., Autonomous System Number (ASN)), nation boundaries (e.g., country code) or GPS coordinates. 

        When a **Footprint** value is not present, the capabilities apply to *any* connected device.
      allOf:
        - $ref: '#/components/schemas/VersionedName'
        - type: object
          properties:
            footprintType:
              description: |
                Types include:
                * [Content Delivery Network Interconnection](https://www.iana.org/assignments/cdni-parameters/cdni-parameters.xhtml#metadata-footprint-types) types
                * [Geo position](https://www.iana.org/assignments/method-tokens/method-tokens.xhtml) types
                * [Civic Address](https://datamodel.tmforum.org/en/latest/Common/Address/) types
                * [Geographic Address type](https://github.com/tmforum-apis/TMF673_GeographicAddress) types
                * [Geographic Location type](https://github.com/tmforum-apis/TMF675_GeographicLocation) types
                * [Geographic Site type](https://github.com/tmforum-apis/TMF674_GeographicSite) types
                * [ITU E.212 Mobile Country Code and Mobile Network Code](https://en.wikipedia.org/wiki/Mobile_country_code) values
                * [GeoJSON](https://github.com/geojson/schema)
                * [TopoJSON](https://github.com/topojson/topojson)
                * [IP Geolocation Feeds (geofeed)](https://datatracker.ietf.org/doc/rfc8805/)
              type: string
              enum:
                - ipv4cidr
                - ipv6cidr
                - asn
                - countrycode
                - altopid
                - subdivisioncode
                - footprintunion
                - civicaddress
                - geoposition
                - itue212countrynetworkcode
                - postaladdress
                - geographicaddress
                - geographiclocation
                - geographicsite
                - geojson
                - topojson
                - geofeedRFC8805
            footprintValue:
              description: A list of footprint values.
              type: array
              items:
                oneOf:
                  - type: string
                  - type: object
            footprintUsage:
              description: Indicates that the footprint value represents an Access Network, a non Access Network, i.e., networks facing the Internet, or both.
              type: string
              enum:
                - access
                - non_access
                - both
            precedence:
              description: |
                Specifies the search execution order of Footprints when they are part of a collection. The lower the numerical value of precedence, 
                the higher the rule precedence. Rules with equal precedence MAY be executed in parallel if supported.
              type: integer
              minimum: 0
      required:
        - name
        - version
        - footprintType
        - footprintValue
        - footprintUsage
        - precedence
    SchemaRestrictionsSet:
      description: Base restriction type
      type: object
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedName'
      properties:
        restrictions:
          type: array
          uniqueItems: true
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/CamaraOverlay'
        footprints:
          type: array
          uniqueItems: true
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/Footprint'
        resourceServers:
          type: array
          uniqueItems: true
          maxItems: 10
          items:
            type: string
            format: uri
      required:
        - restrictions
    CapabilitySetFootprint:
      description: |
        Associates a capability with one or more RestrictionSets that
        defined by footprint constraints.
      type: object
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedName'
        - $ref: '#/components/schemas/Metadata'
      properties:
        footprints:
          description: An array of restrictions that apply when the endpoint is present in one of the entry's footprints.
          type: array
          minItems: 1
          maxItems: 64
          uniqueItems: true
          items:
            allOf:
              - $ref: '#/components/schemas/SchemaRestrictionsSet'
              - required:
                  - footprints
      required:
        - footprints
    CapabilitySetBitmap:
      description: |
        Associates a capability with one or more RestrictionSets 
        define through a bitmap position.
      type: object
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedName'
        - $ref: '#/components/schemas/Metadata'
      properties:
        bitmapCapabilities:
          type: object
          description: |
            Map of bitPosition → SchemaRestrictionsSet.   Keys are stringified bitPosition indices (duplicates impossible).   **Header names (object keys)** SHOULD consist of one or more digits, matching `^[0-9]+$`.   (Note: OpenAPI 3.0.3 cannot enforce key-name patterns natively.)
          additionalProperties:
            $ref: '#/components/schemas/SchemaRestrictionsSet'
      required:
        - bitmapCapabilities
    CapabilityBitmap:
      description: Common attributes of CAMARA capability bitmap
      type: object
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/CamaraCapabilityQuery'
      properties:
        mappingVersion:
          type: string
          description: Version of the capability to restriction mapping, used to detect changes.
          example: 1.0.0
        camaraCapabilitiesBitmap:
          description: |
            Bitmap value of the capabilities to show current state (active or inactive) of the RestrictionSet.

            Decimal representation of a binary bitmask indicating active capabilities.
            This integer should be interpreted as a binary string (bitfield), where:

            - The **least significant bit (rightmost bit)** corresponds to key **"0"** in the `bitmapCapabilities` object.
            - The next bit to the left corresponds to key **"1"**, and so on.
            - Bit at position `n` (counting from right, 0-based) maps to key `"n"`.

            For example:
            - If `CapabilityBitmap` = `13`, the binary form is `1101`.
            - Interpreted as:
                - Bit 0 (LSB, rightmost) → "0" → active
                - Bit 1 → "1" → inactive
                - Bit 2 → "2" → active
                - Bit 3 (MSB) → "3" → active
            - This means `bitmapCapabilities["0"]`, `["2"]`, and `["3"]` apply.

            Implementors of API provider should preserve this bit order when interpreting or generating the bitmask, so that capability indices remain consistent over time.
          type: integer
          minimum: 0
          format: int64
          maximum: 18446744073709552000
          example: 6
      required:
        - mappingVersion
        - camaraCapabilitiesBitmap
    CapabilityDetail:
      description: |
        A self-contained snapshot of what each capability means (CapabilityBitmap) and its current active/inactive state.
        When these are CapabilitySetFootprint the state is always active.

        When it is CapabilitySetBitmap, then CapabilityBitmap is included that conveys the active/inactive state of each
        bit position.
      type: object
      additionalProperties: false
      oneOf:
        - $ref: '#/components/schemas/CapabilitySetFootprint'
        - allOf:
            - $ref: '#/components/schemas/CapabilitySetBitmap'
            - $ref: '#/components/schemas/CapabilityBitmap'
      minProperties: 1
    CapabilityInfo:
      description: A list of CapabilityDetail.
      type: object
      additionalProperties: false
      properties:
        details:
          description: a list of CapabilityDetail.
          type: array
          minItems: 1
          maxItems: 1000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/CapabilityDetail'
    ApplicationServerIpv4Address:
      type: string
      example: 198.51.100.0/24
      description: |
        IPv4 address may be specified in form <address/mask> as:
          - address - an IPv4 number in dotted-quad form 1.2.3.4. Only this exact IP number will match the flow control rule.
          - address/mask - an IP number as above with a mask width of the form 1.2.3.4/24.
            In this case, all IP numbers from 1.2.3.0 to 1.2.3.255 will match. The bit width MUST be valid for the IP version.
    ApplicationServerIpv6Address:
      type: string
      example: 2001:db8:85a3:8d3:1319:8a2e:370:7344
      description: |
        IPv6 address may be specified in form <address/mask> as:
          - address - The /128 subnet is optional for single addresses:
            - 2001:db8:85a3:8d3:1319:8a2e:370:7344
            - 2001:db8:85a3:8d3:1319:8a2e:370:7344/128
          - address/mask - an IP v6 number with a mask:
            - 2001:db8:85a3:8d3::0/64
            - 2001:db8:85a3:8d3::/64
    ApplicationServer:
      description: |
        A server hosting backend applications to deliver some business logic to clients.

        The developer can choose to provide the below specified device identifiers:

        * `ipv4Address`
        * `ipv6Address`
      type: object
      properties:
        ipv4Address:
          $ref: '#/components/schemas/ApplicationServerIpv4Address'
        ipv6Address:
          $ref: '#/components/schemas/ApplicationServerIpv6Address'
      minProperties: 1
    PortsSpec:
      description: Specification of several TCP or UDP ports
      type: object
      minProperties: 1
      properties:
        ranges:
          description: Range of TCP or UDP ports
          type: array
          minItems: 1
          items:
            type: object
            required:
              - from
              - to
            properties:
              from:
                $ref: '#/components/schemas/Port'
              to:
                $ref: '#/components/schemas/Port'
        ports:
          description: Array of TCP or UDP ports
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Port'
      example:
        ranges:
          - from: 5010
            to: 5020
        ports:
          - 5060
          - 5070
    QosProfileName:
      description: |
        A unique name for identifying a specific QoS profile.
        This may follow different formats depending on the API provider implementation.
        Some options addresses:
          - A UUID style string
          - Support for predefined profiles QOS_S, QOS_M, QOS_L, and QOS_E
          - A searchable descriptive name
        The set of QoS Profiles that an API provider is offering may be retrieved by means of the QoS Profile API (qos-profile) or agreed on onboarding time.
      type: string
      example: voice
      minLength: 3
      maxLength: 256
      format: string
      pattern: ^[a-zA-Z0-9_.-]+$
    BaseSessionInfo:
      description: Common attributes of a QoD session
      type: object
      properties:
        device:
          $ref: '#/components/schemas/Device'
        applicationServer:
          $ref: '#/components/schemas/ApplicationServer'
        devicePorts:
          description: The ports used locally by the device for flows to which the requested QoS profile should apply. If omitted, then the qosProfile will apply to all flows between the device and the specified application server address and ports
          allOf:
            - $ref: '#/components/schemas/PortsSpec'
        applicationServerPorts:
          description: A list of single ports or port ranges on the application server
          allOf:
            - $ref: '#/components/schemas/PortsSpec'
        qosProfile:
          $ref: '#/components/schemas/QosProfileName'
        subscriptionRequest:
          $ref: '#/components/schemas/CamaraExtendedSubscriptionRequest'
      required:
        - applicationServer
        - qosProfile
    CreateSession:
      description: Attributes required to create a session
      allOf:
        - $ref: '#/components/schemas/BaseSessionInfo'
        - type: object
          properties:
            duration:
              description: |
                Requested session duration in seconds. Value may be explicitly limited for the QoS profile, as specified in the Qos Profile (see qos-profile API). Implementations can grant the requested session duration or set a different duration, based on network policies or conditions.
              type: integer
              format: int32
              minimum: 1
              example: 3600
          required:
            - duration
      additionalProperties: false
    SessionId:
      description: Session ID in UUID format
      type: string
      format: uuid
    QosStatus:
      description: |
        The current status of the requested QoS session. The status can be one of the following:
        * `REQUESTED` - QoS has been requested by creating a session
        * `AVAILABLE` - The requested QoS has been provided by the network
        * `UNAVAILABLE` - The requested QoS cannot be provided by the network due to some reason
      type: string
      enum:
        - REQUESTED
        - AVAILABLE
        - UNAVAILABLE
    StatusInfo:
      description: |
        Reason for the new `qosStatus`. Currently `statusInfo` is only applicable when `qosStatus` is 'UNAVAILABLE'.
        * `DURATION_EXPIRED` - Session terminated due to requested duration expired
        * `NETWORK_TERMINATED` - Network terminated the session before the requested duration expired
        * `DELETE_REQUESTED`- User requested the deletion of the session before the requested duration expired
      type: string
      enum:
        - DURATION_EXPIRED
        - NETWORK_TERMINATED
        - DELETE_REQUESTED
    SessionInfo:
      description: |
        Session related information returned in responses.
        Note that the device object is defined as optional and will only to be returned if provided in createSession. If more than one type of device identifier was provided, only one identifier will be returned (at implementation choice and with the original value provided in createSession).
        Please note that IP addresses of devices can change and get reused, so the original values may no longer identify the same device. They identified the device at the time of session creation.
      allOf:
        - $ref: '#/components/schemas/BaseSessionInfo'
        - type: object
          properties:
            sessionId:
              $ref: '#/components/schemas/SessionId'
            duration:
              description: |
                Session duration in seconds. Implementations can grant the requested session duration or set a different duration, based on network policies or conditions.
                - When `qosStatus` is "REQUESTED", the value is the duration to be scheduled, granted by the implementation.
                - When `qosStatus` is AVAILABLE", the value is the overall duration since `startedAt. When the session is extended, the value is the new overall duration of the session.
                - When `qosStatus` is "UNAVAILABLE", the value is the overall effective duration since `startedAt` until the session was terminated.
              type: integer
              format: int32
              minimum: 1
              example: 3600
            startedAt:
              description: Date and time when the QoS status became "AVAILABLE". Not to be returned when `qosStatus` is "REQUESTED". Format must follow RFC 3339 and must indicate time zone (UTC or local).
              type: string
              format: date-time
              example: '2024-06-01T12:00:00Z'
            expiresAt:
              description: |
                Date and time of the QoS session expiration. Format must follow RFC 3339 and must indicate time zone (UTC or local).
                - When `qosStatus` is "AVAILABLE", it is the limit time when the session is scheduled to finnish, if not terminated by other means.
                - When `qosStatus` is "UNAVAILABLE", it is the time when the session was terminated.
                - Not to be returned when `qosStatus` is "REQUESTED".
                When the session is extended, the value is the new expiration time of the session.
              type: string
              format: date-time
              example: '2024-06-01T13:00:00Z'
            qosStatus:
              $ref: '#/components/schemas/QosStatus'
            statusInfo:
              $ref: '#/components/schemas/StatusInfo'
          required:
            - sessionId
            - duration
            - qosStatus
    ExtendSessionDuration:
      description: Attributes required to extend the duration of an active session
      type: object
      properties:
        requestedAdditionalDuration:
          description: |
            Additional duration in seconds to be added to the current session duration. The overall session duration, including extensions, shall not exceed the maximum duration limit for the QoS Profile.
          type: integer
          format: int32
          minimum: 1
          example: 1800
      required:
        - requestedAdditionalDuration
    RetrieveSessionsInput:
      description: Parameters to get QoS session information by device
      type: object
      properties:
        device:
          $ref: '#/components/schemas/Device'
    RetrieveSessionsOutput:
      description: QoS session information for a given device
      type: array
      items:
        $ref: '#/components/schemas/SessionInfo'
      minItems: 0
    QosProfileStatusEnum:
      description: |
        The current status of the QoS Profile
        - `ACTIVE`- QoS Profile is available to be used
        - `INACTIVE`- QoS Profile is not currently available to be deployed
        - `DEPRECATED`- QoS profile is actively being used in a QoD session, but can not be deployed in new QoD sessions
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - DEPRECATED
    QosProfileDeviceRequest:
      description: |
        Request object for QoS Profiles for a given device
      type: object
      properties:
        device:
          $ref: '#/components/schemas/Device'
        name:
          $ref: '#/components/schemas/QosProfileName'
        status:
          $ref: '#/components/schemas/QosProfileStatusEnum'
    RateUnitEnum:
      description: Units of rate
      type: string
      enum:
        - bps
        - kbps
        - Mbps
        - Gbps
        - Tbps
    Rate:
      description: Specification of rate
      type: object
      properties:
        value:
          description: Quantity of rate
          type: integer
          example: 10
          format: int32
          minimum: 0
          maximum: 1024
        unit:
          $ref: '#/components/schemas/RateUnitEnum'
    TimeUnitEnum:
      description: Units of time
      type: string
      enum:
        - Days
        - Hours
        - Minutes
        - Seconds
        - Milliseconds
        - Microseconds
        - Nanoseconds
    Duration:
      description: Specification of duration
      type: object
      properties:
        value:
          description: Quantity of duration
          type: integer
          example: 12
          format: int32
          minimum: 1
        unit:
          $ref: '#/components/schemas/TimeUnitEnum'
    QosProfile:
      description: |
        Data type with attributes of a QosProfile
      type: object
      properties:
        name:
          $ref: '#/components/schemas/QosProfileName'
        description:
          description: |
            A description of the QoS profile.
          type: string
          example: QoS profile for video streaming
        status:
          $ref: '#/components/schemas/QosProfileStatusEnum'
        targetMinUpstreamRate:
          description: |
            This is the target minimum upload speed for the QoS profile.
            It represents the minimum rate that the network attempts to deliver.
            Please note that this is a target value—the network might not always be able to provide this rate under all conditions.
            It helps ensure that applications like video calls or live streaming perform consistently.
          allOf:
            - $ref: '#/components/schemas/Rate'
        maxUpstreamRate:
          description: |
            The maximum best effort data
          allOf:
            - $ref: '#/components/schemas/Rate'
        maxUpstreamBurstRate:
          description: |
            When defined, this is the maximum upstream burst rate for the QoS profile, that will enable
            the network to burst data at a higher rate than the maxUpstreamRate for a period of time.
          allOf:
            - $ref: '#/components/schemas/Rate'
        targetMinDownstreamRate:
          description: |
            This is the target maximum upload speed for the QoS profile.
            It represents the maximum rate that the network attempts to deliver.
            Please note that this is a target value—the network might not always be able to provide this rate under all conditions.
            It helps ensure that applications like video calls or live streaming perform consistently.
          allOf:
            - $ref: '#/components/schemas/Rate'
        maxDownstreamRate:
          description: |
            The maximum best effort rate
          allOf:
            - $ref: '#/components/schemas/Rate'
        maxDownstreamBurstRate:
          description: |
            When defined, this is the maximum downstream burst rate for the QoS profile, that will enable
            the network to burst data at a higher rate than the maxDownstreamRate for a period of time.
            This can result in improved user experience when there is additional network capacity.
            For instance, when a user is streaming a video, the network can burst data at a higher rate
            to fill the buffer, and then return to the maxUpstreamRate once the buffer is full.
          allOf:
            - $ref: '#/components/schemas/Rate'
        minDuration:
          description: |
            The shortest time period that this profile can be deployed.
          allOf:
            - $ref: '#/components/schemas/Duration'
        maxDuration:
          description: |
            The maximum time period that this profile can be deployed.
            Overall session duration must not exceed this value. This includes the initial requested duration plus any extensions.
          allOf:
            - $ref: '#/components/schemas/Duration'
        priority:
          type: integer
          example: 20
          description: |
            Priority levels allow efficient resource allocation and ensure optimal performance
            for various services in each technology, with the highest priority traffic receiving
            preferential treatment.
            The lower value the higher priority.
            Not all access networks use the same priority range, so this priority will be
            scaled to the access network's priority range.
          format: int32
          minimum: 1
          maximum: 100
        packetDelayBudget:
          description: |
            The packet delay budget is the maximum allowable one-way latency between the customer's device
            and the gateway from the operator's network to other networks. By limiting the delay, the network
            can provide an acceptable level of performance for various services, such as voice calls,
            video streaming, and data.
            The end-to-end or round trip latency will be about two times this value plus the latency not controlled
            by the operator
          allOf:
            - $ref: '#/components/schemas/Duration'
        jitter:
          description: |
            The jitter requirement aims to limit the maximum variation in round-trip
            packet delay for the 99th percentile of traffic, following ITU Y.1540
            standards. It considers only acknowledged packets in a session, which are
            packets that receive a confirmation of receipt from the recipient (e.g.,
            using TCP). This requirement helps maintain consistent latency, essential
            for real-time applications such as VoIP, video calls, and gaming.
          allOf:
            - $ref: '#/components/schemas/Duration'
        packetErrorLossRate:
          type: integer
          description: |
            This field specifies the acceptable level of data loss during transmission.
            The value is an exponent of 10, so a value of 3 means that up to 10⁻³, or 0.1%, of the
            data packets may be lost. This setting is part of a broader system that categorizes
            different types of network traffic (like phone calls, video streams, or data transfers)
            to ensure they perform reliably on the network.
          format: int32
          minimum: 1
          maximum: 10
          example: 3
        l4sQueueType:
          type: string
          enum:
            - non-l4s-queue
            - l4s-queue
            - mixed-queue
          description: |

            **NOTE**: l4sQueueType is experimental and could change or be removed in a future release.

            Specifies the type of queue for L4S (Low Latency, Low Loss, Scalable Throughput) traffic management. L4S is an advanced queue management approach designed to provide ultra-low latency and high throughput for internet traffic, particularly beneficial for interactive applications such as gaming, video conferencing, and virtual reality.

            **Queue Type Descriptions:**

            - **non-l4s-queue**:
              A traditional queue used for legacy internet traffic that does not utilize L4S enhancements. It provides standard latency and throughput levels.

            - **l4s-queue**:
              A dedicated queue optimized for L4S traffic, delivering ultra-low latency, low loss, and scalable throughput to support latency-sensitive applications.

            - **mixed-queue**:
              A shared queue that can handle both L4S and traditional traffic, offering a balance between ultra-low latency for L4S flows and compatibility with non-L4S flows.
          externalDocs:
            description: For more details, refer to the L4S standard.
            url: https://datatracker.ietf.org/doc/rfc9330/
        serviceClass:
          type: string
          description: |

            **NOTE**: serviceClass is experimental and could change or be removed in a future release.

            The name of a Service Class, representing a QoS Profile designed to provide optimized behavior for a specific application type. While DSCP values are commonly associated with Service Classes, their use may vary across network segments and may not be applied throughout the entire end-to-end QoS session. This aligns with the serviceClass concept used in HomeDevicesQoQ for consistent terminology.

            Service classes define specific QoS behaviors that map to DSCP (Differentiated Services Code Point) values or Microsoft QoS traffic types.

            The supported mappings are:
            1. Values aligned with the [RFC4594](https://datatracker.ietf.org/doc/html/rfc4594) guidelines for differentiated traffic classes.
            2. Microsoft [QOS_TRAFFIC_TYPE](https://learn.microsoft.com/en-us/windows/win32/api/qos2/ne-qos2-qos_traffic_type) values for Windows developers.

            **Supported Service Classes**:

            | Service Class Name    | DSCP Name | DSCP value (decimal) | DCSP value (binary) | Microsoft Value | Application Examples                                                 |
            |-----------------------|-----------|----------------------|---------------------|-----------------|----------------------------------------------------------------------|
            | Microsoft Voice       |    CS7    |          56          |        111000       |       4,5       | Microsoft QOSTrafficTypeVoice and QOSTrafficTypeControl              |
            | Microsoft Audio/Video |    CS5    |          40          |        101000       |       2,3       | Microsoft QOSTrafficTypeExcellentEffort and QOSTrafficTypeAudioVideo |
            | Real-Time Interactive |    CS4    |          32          |        100000       |                 | Video conferencing and Interactive gaming                            |
            | Multimedia Streaming  |    AF31   |          26          |        011010       |                 | Streaming video and audio on demand                                  |
            | Broadcast Video       |    CS3    |          24          |        011000       |                 | Broadcast TV & live events                                           |
            | Low-Latency Data      |    AF21   |          18          |        010010       |                 | Client/server transactions Web-based ordering                        |
            | High-Throughput Data  |    AF11   |          10          |        001010       |                 | Store and forward applications                                       |
            | Low-Priority Data     |    CS1    |           8          |        001000       |        1        | Any flow that has no BW assurance - also:                            |
            |                       |           |                      |                     |                 | Microsoft QOSTrafficTypeBackground                                   |
            | Standard              |  DF(CS0)  |           0          |        000000       |        0        | Undifferentiated applications - also:                                |
            |                       |           |                      |                     |                 | Microsoft QOSTrafficTypeBestEffort                                   |
          enum:
            - microsoft_voice
            - microsoft_audio_video
            - real_time_interactive
            - multimedia_streaming
            - broadcast_video
            - low_latency_data
            - high_throughput_data
            - low_priority_data
            - standard
          example: real_time_interactive
      required:
        - name
        - status
    ConnectedNetworkType:
      type: string
      description: Network Type is intended to provide insight to connected network's capabilities from standards perspective. Actual network capabilities may differ based on implementation and MUST be checked with the connected network provider.
      enum:
        - 2G
        - 3G
        - 4G
        - 5G
        - UNKNOWN
    org.camaraproject.connected-network-type-subscriptions.v1.network-type-changed.data:
      description: Event detail structure for network type changed data events
      allOf:
        - $ref: '#/components/schemas/CamaraCloudEventData'
        - type: object
          properties:
            device:
              $ref: '#/components/schemas/Device'
            connectedNetworkType:
              $ref: '#/components/schemas/ConnectedNetworkType'
            subscriptionId:
              $ref: '#/components/schemas/SubscriptionId'
          required:
            - connectedNetworkType
            - subscriptionId
          additionalProperties: false
    TerminationReason:
      type: string
      description: |
        - NETWORK_TERMINATED - API server stopped sending notification
        - SUBSCRIPTION_EXPIRED - Subscription expire time (optionally set by the requester) has been reached
        - MAX_EVENTS_REACHED - Maximum number of events (optionally set by the requester) has been reached
        - ACCESS_TOKEN_EXPIRED - Access Token sinkCredential (optionally set by the requester) expiration time has been reached
        - SUBSCRIPTION_DELETED - Subscription was deleted by the requester
      enum:
        - MAX_EVENTS_REACHED
        - NETWORK_TERMINATED
        - SUBSCRIPTION_EXPIRED
        - ACCESS_TOKEN_EXPIRED
        - SUBSCRIPTION_DELETED
    org.camaraproject.connected-network-type-subscriptions.v1.subscription-ends.data:
      description: Event detail structure for SUBSCRIPTION_ENDS event
      allOf:
        - $ref: '#/components/schemas/CamaraCloudEventData'
        - type: object
          properties:
            device:
              $ref: '#/components/schemas/Device'
            terminationReason:
              $ref: '#/components/schemas/TerminationReason'
            subscriptionId:
              $ref: '#/components/schemas/SubscriptionId'
            terminationDescription:
              type: string
              description: termination description
          required:
            - terminationReason
            - subscriptionId
          additionalProperties: false
    Area:
      description: Base schema for all areas
      type: object
      properties:
        areaType:
          $ref: '#/components/schemas/AreaType'
      required:
        - areaType
      discriminator:
        propertyName: areaType
        mapping:
          CIRCLE: '#/components/schemas/Circle'
          POLYGON: '#/components/schemas/Polygon'
    Latitude:
      description: Latitude component of a location
      type: number
      format: double
      minimum: -90
      maximum: 90
    Longitude:
      description: Longitude component of location
      type: number
      format: double
      minimum: -180
      maximum: 180
    Point:
      type: object
      description: Coordinates (latitude, longitude) defining a location in a map
      required:
        - latitude
        - longitude
      properties:
        latitude:
          $ref: '#/components/schemas/Latitude'
        longitude:
          $ref: '#/components/schemas/Longitude'
      example:
        latitude: 50.735851
        longitude: 7.10066
    Circle:
      description: Circular area
      allOf:
        - $ref: '#/components/schemas/Area'
        - type: object
          required:
            - center
            - radius
          properties:
            center:
              $ref: '#/components/schemas/Point'
            radius:
              type: number
              description: Distance from the center in meters
              minimum: 1
    PointList:
      description: List of points defining a polygon
      type: array
      items:
        $ref: '#/components/schemas/Point'
      minItems: 3
      maxItems: 15
    Polygon:
      description: Polygonal area. The Polygon should be a simple polygon, i.e. should not intersect itself.
      allOf:
        - $ref: '#/components/schemas/Area'
        - type: object
          required:
            - boundary
          properties:
            boundary:
              $ref: '#/components/schemas/PointList'
    AreaType:
      type: string
      description: |
        Type of this area.
        CIRCLE - The area is defined as a circle.
        POLYGON - The area is defined as a polygon.
      enum:
        - CIRCLE
        - POLYGON
    org.camaraproject.geofencing-subscriptions.v1.area-left.data:
      description: |
        Event detail structure for org.camaraproject.geofencing-subscriptions.v1.area-left event.
        Note that the device object is defined as optional and will only to be returned if provided in createSubscription.
        If more than one type of device identifier was provided, only one identifier will be returned
        (at implementation choice and with the original value provided in createSubscription).
      allOf:
        - $ref: '#/components/schemas/CamaraCloudEventData'
        - type: object
          properties:
            device:
              $ref: '#/components/schemas/Device'
            area:
              $ref: '#/components/schemas/Area'
            subscriptionId:
              $ref: '#/components/schemas/SubscriptionId'
          required:
            - area
            - subscriptionId
          additionalProperties: false
    org.camaraproject.geofencing-subscriptions.v1.area-entered.data:
      description: |
        Event detail structure for org.camaraproject.geofencing-subscriptions.v1.area-entered event.
        Note that the device object is defined as optional and will only to be returned if provided in createSubscription.
        If more than one type of device identifier was provided, only one identifier will be returned
        (at implementation choice and with the original value provided in createSubscription).
      allOf:
        - $ref: '#/components/schemas/CamaraCloudEventData'
        - type: object
          properties:
            device:
              $ref: '#/components/schemas/Device'
            area:
              $ref: '#/components/schemas/Area'
            subscriptionId:
              $ref: '#/components/schemas/SubscriptionId'
          required:
            - area
            - subscriptionId
          additionalProperties: false
    org.camaraproject.geofencing-subscriptions.v1.subscription-ends.data:
      description: |
        Event detail structure for org.camaraproject.geofencing-subscriptions.v1.subscription-ends event.
        Note that the device object is defined as optional and will only to be returned if provided in createSubscription.
        If more than one type of device identifier was provided, only one identifier will be returned
        (at implementation choice and with the original value provided in createSubscription).
      allOf:
        - $ref: '#/components/schemas/CamaraCloudEventData'
        - type: object
          properties:
            device:
              $ref: '#/components/schemas/Device'
            area:
              $ref: '#/components/schemas/Area'
            terminationReason:
              $ref: '#/components/schemas/TerminationReason'
            terminationDescription:
              description: Explanation why a subscription ended or had to end.
              type: string
            subscriptionId:
              $ref: '#/components/schemas/SubscriptionId'
          required:
            - area
            - terminationReason
            - subscriptionId
          additionalProperties: false
    EventQosStatus:
      description: |
        The current status of a requested or previously available session. Applicable values in the event are:
        *  `AVAILABLE` - The requested QoS has been provided by the network.
        *  `UNAVAILABLE` - A requested or previously available QoS session is now unavailable. `statusInfo` may provide additional information about the reason for the unavailability.
      type: string
      enum:
        - AVAILABLE
        - UNAVAILABLE
    org.camaraproject.quality-on-demand.v1.qos-status-changed.data:
      description: Event to notify a QoS status change
      allOf:
        - $ref: '#/components/schemas/CamaraCloudEventData'
        - type: object
          properties:
            sessionId:
              $ref: '#/components/schemas/SessionId'
            qosStatus:
              $ref: '#/components/schemas/EventQosStatus'
            statusInfo:
              $ref: '#/components/schemas/StatusInfo'
          required:
            - sessionId
            - qosStatus
          additionalProperties: false
    org.camaraproject.capability.v0.capability-bitmap-changed.data:
      description: Event for capability bitmap changed
      allOf:
        - $ref: '#/components/schemas/CamaraCloudEventData'
        - type: object
          properties:
            capabilityBitmap:
              $ref: '#/components/schemas/CapabilityBitmap'
          required:
            - capabilityBitmap
          additionalProperties: false
    org.camaraproject.capability.v0.capability-info-changed.data:
      description: Event for capability info changed
      allOf:
        - $ref: '#/components/schemas/CamaraCloudEventData'
        - type: object
          properties:
            capabilityInfo:
              $ref: '#/components/schemas/CapabilityInfo'
          required:
            - capabilityInfo
          additionalProperties: false
  parameters:
    x-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        type: string
        pattern: ^[a-zA-Z0-9-]{0,55}$
        example: b4333c46-49c0-4f62-80d7-f0ef930f1c46
    SubscriptionId:
      name: id
      in: path
      description: Subscription identifier that was obtained from the create event subscription operation.
      required: true
      schema:
        $ref: '#/components/schemas/SubscriptionId'
    If-None-Match:
      name: If-None-Match
      in: header
      description: ETag for conditional requests
      schema:
        type: string
    If-Modified-Since:
      name: If-Modified-Since
      in: header
      description: Timestamp for conditional requests
      schema:
        type: string
        format: date-time
  headers:
    x-correlator:
      description: Correlation id for the different services
      schema:
        type: string
        pattern: ^[a-zA-Z0-9-]{0,55}$
    ETag:
      description: Entity tag for caching
      schema:
        type: string
    Cache-Control:
      description: Public cacheable for 10 minutes
      schema:
        type: string
        example: public, max-age=600
    Last-Modified:
      description: Timestamp of last modification
      schema:
        type: string
        format: date-time
  responses:
    Generic400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: Generic400
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
                      - '{{SPECIFIC_CODE}}'
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
            GENERIC_400_{{SPECIFIC_CODE}}:
              description: Specific Syntax Exception regarding a field that is relevant in the context of the API
              value:
                status: 400
                code:
                  '[object Object]': null
                message:
                  '[object Object]': null
    Generic401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: Generic401
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
                      - AUTHENTICATION_REQUIRED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials.
            GENERIC_401_AUTHENTICATION_REQUIRED:
              description: New authentication is needed, authentication is no longer valid
              value:
                status: 401
                code: AUTHENTICATION_REQUIRED
                message: New authentication is required.
    Generic403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: Generic403
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
                      - INVALID_TOKEN_CONTEXT
                      - '{{SPECIFIC_CODE}}'
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
            GENERIC_403_INVALID_TOKEN_CONTEXT:
              description: Reflect some inconsistency between information in some field of the API and the related OAuth2 Token
              value:
                status: 403
                code: INVALID_TOKEN_CONTEXT
                message: '{{field}} is not consistent with access token.'
            GENERIC_403_{{SPECIFIC_CODE}}:
              description: Indicate a Business Logic condition that forbids a process not attached to a specific field in the context of the API
              value:
                status: 403
                code:
                  '[object Object]': null
                message:
                  '[object Object]': null
    CreateSubscriptionBadRequest400:
      description: Problem with the client request.
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: CreateSubscriptionBadRequest400
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - INVALID_CREDENTIAL
                      - INVALID_PROTOCOL
                      - INVALID_TOKEN
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_INVALID_PROTOCOL:
              value:
                status: 400
                code: INVALID_PROTOCOL
                message: Only HTTP is supported.
            GENERIC_400_INVALID_CREDENTIAL:
              value:
                status: 400
                code: INVALID_CREDENTIAL
                message: Only Access token is supported.
            GENERIC_400_INVALID_TOKEN:
              value:
                status: 400
                code: INVALID_TOKEN
                message: Only bearer token is supported.
    SubscriptionPermissionDenied403:
      description: Client does not have sufficient permission.
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: SubscriptionPermissionDenied403
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
                      - SUBSCRIPTION_MISMATCH
          examples:
            GENERIC_403_PERMISSION_DENIED:
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
            GENERIC_403_TOKEN_MISMATCH:
              value:
                status: 403
                code: SUBSCRIPTION_MISMATCH
                message: Inconsistent access token for requested events subscription.
    Generic409:
      description: Conflict
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: Generic409
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 409
                  code:
                    enum:
                      - ABORTED
                      - ALREADY_EXISTS
                      - CONFLICT
                      - '{{SPECIFIC_CODE}}'
          examples:
            GENERIC_409_ABORTED:
              description: Concurreny of processes of the same nature/scope
              value:
                status: 409
                code: ABORTED
                message: Concurrency conflict.
            GENERIC_409_ALREADY_EXISTS:
              description: Trying to create an existing resource
              value:
                status: 409
                code: ALREADY_EXISTS
                message: The resource that a client tried to create already exists.
            GENERIC_409_CONFLICT:
              description: Duplication of an existing resource
              value:
                status: 409
                code: CONFLICT
                message: A specified resource duplicate entry found.
            GENERIC_409_{{SPECIFIC_CODE}}:
              description: Specific conflict situation that is relevant in the context of the API
              value:
                status: 409
                code:
                  '[object Object]': null
                message:
                  '[object Object]': null
    CreateSubscriptionUnprocessableEntity422:
      description: Unprocessable Entity
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: CreateSubscriptionUnprocessableEntity422
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - IDENTIFIER_MISMATCH
                      - MISSING_IDENTIFIER
                      - MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED
                      - SERVICE_NOT_APPLICABLE
                      - UNNECESSARY_IDENTIFIER
                      - UNSUPPORTED_IDENTIFIER
                      - GEOFENCING_SUBSCRIPTIONS.AREA_NOT_COVERED
                      - GEOFENCING_SUBSCRIPTIONS.INVALID_AREA
          examples:
            GENERIC_422_IDENTIFIER_MISMATCH:
              description: Inconsistency between device identifiers not pointing to the same device.
              value:
                status: 422
                code: IDENTIFIER_MISMATCH
                message: Provided identifiers are not consistent.
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service not applicable for the provided identifier
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided identifier.
            GENERIC_422_MISSING_IDENTIFIER:
              description: An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: The device cannot be identified.
            GENERIC_422_MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED:
              value:
                status: 422
                code: MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED
                message: Multi event types subscription not managed.
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit identifier is provided when a device or phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The device is already identified by the access token.
            GENERIC_422_UNSUPPORTED_IDENTIFIER:
              description: None of the provided identifiers is supported by the implementation
              value:
                status: 422
                code: UNSUPPORTED_IDENTIFIER
                message: The identifier provided is not supported.
            GEOFENCING_422_AREA_NOT_COVERED:
              summary: The area cannot be covered
              description: The system is not able cover the requested area
              value:
                status: 422
                code: GEOFENCING_SUBSCRIPTIONS.AREA_NOT_COVERED
                message: Unable to cover the requested area
            GEOFENCING_422_INVALID_AREA:
              summary: Invalid area
              description: The requested area is too small to be supported by the system.
              value:
                status: 422
                code: GEOFENCING_SUBSCRIPTIONS.INVALID_AREA
                message: The requested area is too small
    Generic429:
      description: Too Many Requests
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: Generic429
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 429
                  code:
                    enum:
                      - QUOTA_EXCEEDED
                      - TOO_MANY_REQUESTS
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Out of resource quota.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: Access to the API has been temporarily blocked due to rate or spike arrest limits being reached
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Rate limit reached.
    Generic410:
      description: Gone
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: Generic410
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 410
                  code:
                    enum:
                      - GONE
          examples:
            GENERIC_410_GONE:
              description: Use in notifications flow to allow API Consumer to indicate that its callback is no longer available
              value:
                status: 410
                code: GONE
                message: Access to the target resource is no longer available.
    SubscriptionIdRequired400:
      description: Problem with the client request
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: SubscriptionIdRequired400
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              summary: Schema validation failed
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_SUBSCRIPTION_ID_REQUIRED:
              summary: The subscription id is required
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: 'Expected property is missing: subscriptionId'
    Generic404:
      description: Not found
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: Generic404
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
                      - IDENTIFIER_NOT_FOUND
                      - '{{SPECIFIC_CODE}}'
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
            GENERIC_404_IDENTIFIER_NOT_FOUND:
              description: Some identifier cannot be matched to a device
              value:
                status: 404
                code: IDENTIFIER_NOT_FOUND
                message: Device identifier not found.
            GENERIC_404_{{SPECIFIC_CODE}}:
              description: Specific situation to highlight the resource/concept not found
              value:
                status: 404
                code:
                  '[object Object]': null
                message:
                  '[object Object]': null
    CapabilityNotModified304:
      description: Not Modified (cached response)
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
    CapabilityApiBadRequest400:
      description: Bad Request when query capability
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: CapabilityApiBadRequest400
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
                      - INVALID_CREDENTIAL
                      - INVALID_TOKEN
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
            GENERIC_400_INVALID_CREDENTIAL:
              value:
                status: 400
                code: INVALID_CREDENTIAL
                message: Only Access token is supported
            GENERIC_400_INVALID_TOKEN:
              value:
                status: 400
                code: INVALID_TOKEN
                message: Only bearer token is supported
    CapabilityApiNotFound404:
      description: Capability API not found
      content:
        application/json:
          schema:
            title: CapabilityApiNotFound404
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
          example:
            status: 404
            code: NOT_FOUND
            message: No Capability API found
    Generic500:
      description: Internal Server Error
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: Generic500
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 500
                  code:
                    enum:
                      - INTERNAL
          examples:
            GENERIC_500_INTERNAL:
              description: Problem in Server side. Regular Server Exception
              value:
                status: 500
                code: INTERNAL
                message: Unknown server error. Typically a server bug.
    Generic503:
      description: Service Unavailable
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: Generic503
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 503
                  code:
                    enum:
                      - UNAVAILABLE
          examples:
            GENERIC_503_UNAVAILABLE:
              description: Service is not available. Temporary situation usually related to maintenance process in the server side
              value:
                status: 503
                code: UNAVAILABLE
                message: Service Unavailable.
    CreateSessionBadRequest400:
      description: Bad Request when creating a session
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: CreateSessionBadRequest400
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
                      - QUALITY_ON_DEMAND.DURATION_OUT_OF_RANGE
                      - INVALID_CREDENTIAL
                      - INVALID_TOKEN
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
            DurationOutOfRangeForQoSProfile:
              description: The requested duration is out of the allowed range for the specific QoS profile
              value:
                status: 400
                code: QUALITY_ON_DEMAND.DURATION_OUT_OF_RANGE
                message: The requested duration is out of the allowed range for the specific QoS profile
            GENERIC_400_INVALID_CREDENTIAL:
              value:
                status: 400
                code: INVALID_CREDENTIAL
                message: Only Access token is supported
            GENERIC_400_INVALID_TOKEN:
              value:
                status: 400
                code: INVALID_TOKEN
                message: Only bearer token is supported
    GenericDevice404:
      description: Not found
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: GenericDevice404
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
                      - IDENTIFIER_NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
            GENERIC_404_DEVICE_NOT_FOUND:
              description: Device identifier not found
              value:
                status: 404
                code: IDENTIFIER_NOT_FOUND
                message: Device identifier not found.
    SessionInConflict409:
      description: Conflict
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: SessionInConflict409
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 409
                  code:
                    enum:
                      - CONFLICT
          example:
            status: 409
            code: CONFLICT
            message: Conflict with an existing session for the same device.
    Generic422:
      description: Unprocessable Content
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: Generic422
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - IDENTIFIER_MISMATCH
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNSUPPORTED_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
                      - '{{SPECIFIC_CODE}}'
          examples:
            GENERIC_422_IDENTIFIER_MISMATCH:
              description: Inconsistency between identifiers not pointing to the same device
              value:
                status: 422
                code: IDENTIFIER_MISMATCH
                message: Provided identifiers are not consistent.
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              description: Service not applicable for the provided identifier
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided identifier.
            GENERIC_422_MISSING_IDENTIFIER:
              description: An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: The device cannot be identified.
            GENERIC_422_UNSUPPORTED_IDENTIFIER:
              description: None of the provided identifiers is supported by the implementation
              value:
                status: 422
                code: UNSUPPORTED_IDENTIFIER
                message: The identifier provided is not supported.
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              description: An explicit identifier is provided when a device or phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The device is already identified by the access token.
            GENERIC_422_{{SPECIFIC_CODE}}:
              description: Any semantic condition associated to business logic, specifically related to a field or data structure
              value:
                status: 422
                code:
                  '[object Object]': null
                message:
                  '[object Object]': null
    GenericExtendSessionDuration400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: GenericExtendSessionDuration400
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
                      - OUT_OF_RANGE
                      - QUALITY_ON_DEMAND.DURATION_OUT_OF_RANGE
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
            DurationOutOfRangeForQoSProfile:
              description: NOTE - this error response cannot be returned by the `/extend` operation and will be removed from the API definition in the next version.
              value:
                status: 400
                code: QUALITY_ON_DEMAND.DURATION_OUT_OF_RANGE
                message: The requested duration is out of the allowed range for the specific QoS profile
    SessionStatusConflict409:
      description: Conflict
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            title: SessionStatusConflict409
            allOf:
              - $ref: '#/components/schemas/ErrorInfo'
              - type: object
                properties:
                  status:
                    enum:
                      - 409
                  code:
                    enum:
                      - QUALITY_ON_DEMAND.SESSION_EXTENSION_NOT_ALLOWED
          examples:
            SessionExtensionNotAllowed:
              description: Session extension is in conflict with current session status
              value:
                status: 409
                code: QUALITY_ON_DEMAND.SESSION_EXTENSION_NOT_ALLOWED
                message: Extending the session duration is not allowed in the current state ({qosStatus}). The session must be in the AVAILABLE state.
  examples:
    CAMARA_CAPABILITY_QUERY_REQUEST_EXAMPLE:
      summary: Example of capability query
      description: query capability request
      value:
        queries:
          - device:
              phoneNumber: '+123456788'
            overlayExtends:
              - https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
              - https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/qos-profiles.yaml
            subscriptionRequest:
              sink: https://application-server.com/notifications
              protocol: HTTP
              types:
                - org.camaraproject.capability.v0.capability-info-changed
                - org.camaraproject.capability.v0.capability-bitmap-changed
              config:
                subscriptionDetail:
                  device:
                    phoneNumber: '+123456788'
    CAMARA_CAPABILITY_QUERY_REQUEST_RESPONSE_EXAMPLE:
      summary: Example of capability query response
      description: query capability response
      value:
        details:
          - name: cap-qod-adi
            version: 0.0.1
            createdAt: '2025-05-09T14:25:38Z'
            overlayExtends:
              - https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
              - https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/qos-profiles.yaml
            device:
              phoneNumber: '+123456788'
            mappingVersion: 1.0.0
            camaraCapabilitiesBitmap: 63
            bitmapCapabilities:
              '0':
                name: rr-qod-adi
                version: 0.0.1
                restrictions:
                  - name: org.camaraproject.capability.v0.object-instance-restriction.accepted-device-identifiers
                    version: 0.0.1
                    extends: https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
                    actions:
                      - target: $.components.schemas['Device'].properties['ipv4Address']
                        remove: true
                      - target: $.components.schemas['Device'].properties['networkAccessIdentifier']
                        remove: true
              '1':
                name: rr-qod-xcor
                version: 0.0.1
                restrictions:
                  - name: org.camaraproject.capability.v0.parameter-restriction.x-cor-required
                    version: 0.0.1
                    extends: https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
                    actions:
                      - target: $.components.parameters['x-correlator']
                        update:
                          - mandatory: true
              '2':
                name: rr-session-extend-unavailable
                version: 0.0.1
                restrictions:
                  - name: org.camaraproject.capability.v0.operation-restriction.session-extend-unavailable
                    version: 0.0.1
                    extends: https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
                    actions:
                      - target: $.paths['/sessions/{sessionId}/extend'].post
                        targetLocations:
                          - location: /paths/~1sessions~1{sessionId}~1extend/post
                        update:
                          - notAvailable: true
              '3':
                name: rr-session-accept-qos
                version: 0.0.1
                restrictions:
                  - name: org.camaraproject.capability.v0.enum-restriction.accepted-qos-profiles
                    version: 0.0.1
                    extends: https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
                    operator: and
                    actions:
                      - targetLocations:
                          - location: $method
                        update:
                          - enum:
                              - POST
                      - targetLocations:
                          - location: $request.path
                        update:
                          - enum:
                              - /sessions
                      - targetLocations:
                          - location: $request.body#/qosProfile
                        update:
                          - enum:
                              - QoS_XR
                              - QoS_VC
              '4':
                name: rr-ipv6-portspec-max-5
                version: 0.0.1
                restrictions:
                  - name: org.camaraproject.capability.v0.object-instance-restriction.appserv-ipv6
                    version: 0.0.1
                    extends: https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
                    actions:
                      - target: $.components.schemas['ApplicationServer'].properties['ipv4Address']
                        remove: true
                  - name: org.camaraproject.capability.v0.array-size-restriction.portspec-ports-max5
                    version: 0.0.1
                    extends: https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
                    actions:
                      - target: $.components.schemas['PortsSpec'].properties['ports']
                        update:
                          - maxItems: 5
              '5':
                name: rr-sessioninfo-duration-multipleof-60
                version: 0.0.1
                restrictions:
                  - name: org.camaraproject.capability.v0.numeric-restriction.sessioninfo-duration-min60-multiple60
                    version: 0.0.1
                    extends: https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
                    actions:
                      - target: $.components.schemas['SessionInfo'].properties['duration']
                        update:
                          - minimum: 60
                          - multipleOf: 60
              '6':
                name: rr-qosprofile-get-unavailable
                version: 0.0.1
                restrictions:
                  - name: org.camaraproject.capability.v0.operation-restriction.qosprofile-get-unavailable
                    version: 0.0.1
                    extends: https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/qos-profiles.yaml
                    actions:
                      - target: $.paths['/qos-profiles/{name}'].get
                        remove: true
    EVENT_CAPABILITY_BITMAP_CHANGED_EXAMPLE:
      summary: Cloud event example for capability bitmap changed
      description: Cloud event example for capability bitmap changed
      value:
        id: cb1
        source: https://api.example.com/capability/capability-subscriptions/bitmap
        datacontenttype: application/json
        specversion: '1.0'
        type: org.camaraproject.capability.v0.capability-bitmap-changed
        time: '2025-05-06T00:00:00.000Z'
        data:
          capabilityBitmap:
            device:
              phoneNumber: '+123456788'
            overlayExtends:
              - https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
              - https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/qos-profiles.yaml
            mappingVersion: 1.0.0
            camaraCapabilitiesBitmap: 127
    EVENT_CAPABILITY_INFO_CHANGED_EXAMPLE:
      description: Cloud event example for capability info changed
      value:
        id: ci1
        source: https://api.example.com/capability/capability-subscriptions/info
        specversion: '1.0'
        datacontenttype: application/json
        type: org.camaraproject.capability.v0.capability-info-changed
        time: '2025-05-06T00:00:00.000Z'
        data:
          capabilityInfo:
            details:
              - name: cap-qod-adi
                version: 0.0.2
                createdAt: '2025-05-09T14:25:38Z'
                overlayExtends:
                  - https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
                  - https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/qos-profiles.yaml
                device:
                  phoneNumber: '+123456788'
                mappingVersion: 1.0.0
                camaraCapabilitiesBitmap: 1
                bitmapCapabilities:
                  '0':
                    name: rr-qod-adi
                    version: 0.0.1
                    restrictions:
                      - name: org.camaraproject.capability.v0.object-instance-restriction.accepted-device-identifiers
                        version: 0.0.1
                        extends: https://github.com/camaraproject/QualityOnDemand/blob/r2.2/code/API_definitions/quality-on-demand.yaml
                        actions:
                          - target: $.components.schemas['Device'].properties['ipv4Address']
                            remove: true
                          - target: $.components.schemas['Device'].properties['networkAccessIdentifier']
                            remove: true
    EVENT_QOS_STATUS_CHANGED_EXAMPLE:
      summary: QoS status changed
      description: Cloud event example for QoS status change to UNAVAILABLE due to DURATION_EXPIRED
      value:
        id: 83a0d986-0866-4f38-b8c0-fc65bfcda452
        source: https://api.example.com/qod/v1/sessions/123e4567-e89b-12d3-a456-426614174000
        specversion: '1.0'
        type: org.camaraproject.quality-on-demand.v1.qos-status-changed
        time: '2024-06-01T13:00:00Z'
        data:
          sessionId: 123e4567-e89b-12d3-a456-426614174000
          qosStatus: UNAVAILABLE
          statusInfo: DURATION_EXPIRED
    SESSION_AVAILABLE_EXAMPLE:
      summary: QoS session status is available
      description: QoS session info when status is available
      value:
        duration: 3600
        device:
          ipv4Address:
            publicAddress: 203.0.113.0
            publicPort: 59765
        applicationServer:
          ipv4Address: 198.51.100.0/24
        qosProfile: QOS_L
        subscriptionRequest:
          sink: https://application-server.com/notifications
        sessionId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        startedAt: '2024-06-01T12:00:00Z'
        expiresAt: '2024-06-01T13:00:00Z'
        qosStatus: AVAILABLE
    SESSION_UNAVAILABLE_EXAMPLE:
      summary: QoS session is unavailable
      description: QoS session info when status is unavailable due to network termination
      value:
        duration: 2428
        device:
          ipv4Address:
            publicAddress: 203.0.113.0
            publicPort: 59765
        applicationServer:
          ipv4Address: 198.51.100.0/24
        qosProfile: QOS_L
        subscriptionRequest:
          sink: https://application-server.com/notifications
        sessionId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        startedAt: '2024-06-01T12:00:00Z'
        expiresAt: '2024-06-01T12:40:28Z'
        qosStatus: UNAVAILABLE
        statusInfo: NETWORK_TERMINATED
    RETRIEVE_SESSIONS_EXAMPLE:
      summary: List of QoS sessions for the device
      description: A single QoS session for the device is available
      value:
        - duration: 3600
          device:
            phoneNumber: '+123456789'
          applicationServer:
            ipv4Address: 0.0.0.0/0
          qosProfile: QOS_L
          subscriptionRequest:
            sink: https://application-server.com/notifications
          sessionId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          startedAt: '2024-06-01T12:00:00Z'
          expiresAt: '2024-06-01T13:00:00Z'
          qosStatus: AVAILABLE
    RETRIEVE_SESSIONS_EMPTY_EXAMPLE:
      summary: No sessions found for the device
      description: An empty array is returned when no sessions are found for the device
      value: []
